{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tenci\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\TREN_Aplicaci-n_web_cobros\\\\TrainApp\\\\src\\\\GraphVisualization.js\";\nimport React from 'react';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = ({\n  graphData\n}) => {\n  const nodes = graphData.nodos.map((nodo, index) => ({\n    x: index * 10,\n    y: index * 10,\n    label: nodo.nombre\n  }));\n  const edges = graphData.aristas.map(arista => {\n    const startNode = graphData.nodos.find(n => n.id === arista.nodoInicio);\n    const endNode = graphData.nodos.find(n => n.id === arista.nodoFin);\n    const startIndex = graphData.nodos.indexOf(startNode);\n    const endIndex = graphData.nodos.indexOf(endNode);\n    return {\n      x: [startIndex * 10, endIndex * 10],\n      y: [startIndex * 10, endIndex * 10]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(XYPlot, {\n    width: 300,\n    height: 300,\n    children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), edges.map((edge, index) => /*#__PURE__*/_jsxDEV(LineSeries, {\n      data: [{\n        x: edge.x[0],\n        y: edge.y[0]\n      }, {\n        x: edge.x[1],\n        y: edge.y[1]\n      }]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MarkSeries, {\n      data: nodes.map((node, index) => ({\n        x: node.x,\n        y: node.y\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","LineSeries","MarkSeries","jsxDEV","_jsxDEV","GraphVisualization","graphData","nodes","nodos","map","nodo","index","x","y","label","nombre","edges","aristas","arista","startNode","find","n","id","nodoInicio","endNode","nodoFin","startIndex","indexOf","endIndex","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","edge","data","node","_c","$RefreshReg$"],"sources":["C:/Users/tenci/OneDrive/Escritorio/Nueva carpeta/TREN_Aplicaci-n_web_cobros/TrainApp/src/GraphVisualization.js"],"sourcesContent":["import React from 'react';\r\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries } from 'react-vis';\r\n\r\nconst GraphVisualization = ({ graphData }) => {\r\n  const nodes = graphData.nodos.map((nodo, index) => ({\r\n    x: index * 10,\r\n    y: index * 10,\r\n    label: nodo.nombre\r\n  }));\r\n\r\n  const edges = graphData.aristas.map((arista) => {\r\n    const startNode = graphData.nodos.find(n => n.id === arista.nodoInicio);\r\n    const endNode = graphData.nodos.find(n => n.id === arista.nodoFin);\r\n\r\n    const startIndex = graphData.nodos.indexOf(startNode);\r\n    const endIndex = graphData.nodos.indexOf(endNode);\r\n\r\n    return {\r\n      x: [startIndex * 10, endIndex * 10],\r\n      y: [startIndex * 10, endIndex * 10]\r\n    };\r\n  });\r\n\r\n  return (\r\n    <XYPlot width={300} height={300}>\r\n      <VerticalGridLines />\r\n      <HorizontalGridLines />\r\n      <XAxis />\r\n      <YAxis />\r\n      {edges.map((edge, index) => (\r\n        <LineSeries key={index} data={[{ x: edge.x[0], y: edge.y[0] }, { x: edge.x[1], y: edge.y[1] }]} />\r\n      ))}\r\n      <MarkSeries data={nodes.map((node, index) => ({ x: node.x, y: node.y }))} />\r\n    </XYPlot>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}