{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tenci\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta\\\\TREN_Aplicaci-n_web_cobros\\\\TrainApp\\\\src\\\\GraphVisualization.js\";\nimport React from 'react';\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries, LabelSeries } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = ({\n  graphData\n}) => {\n  console.log('Graph data in visualization:', graphData);\n\n  // Assign positions for nodes\n  const nodePositions = {};\n  const angleIncrement = 2 * Math.PI / graphData.nodos.length;\n  graphData.nodos.forEach((nodo, index) => {\n    const angle = index * angleIncrement;\n    nodePositions[nodo.id] = {\n      x: 50 + 40 * Math.cos(angle),\n      y: 50 + 40 * Math.sin(angle),\n      label: nodo.nombre\n    };\n  });\n  const nodes = Object.values(nodePositions);\n  const edges = graphData.aristas.map(arista => {\n    const startNode = nodePositions[arista.nodoInicio];\n    const endNode = nodePositions[arista.nodoFin];\n    return {\n      x: [startNode.x, endNode.x],\n      y: [startNode.y, endNode.y]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(XYPlot, {\n    width: 300,\n    height: 300,\n    xDomain: [0, 100],\n    yDomain: [0, 100],\n    children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), edges.map((edge, index) => /*#__PURE__*/_jsxDEV(LineSeries, {\n      data: [{\n        x: edge.x[0],\n        y: edge.y[0]\n      }, {\n        x: edge.x[1],\n        y: edge.y[1]\n      }],\n      style: {\n        stroke: 'blue'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MarkSeries, {\n      data: nodes.map(node => ({\n        x: node.x,\n        y: node.y\n      })),\n      size: 5,\n      style: {\n        fill: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelSeries, {\n      data: nodes.map(node => ({\n        x: node.x,\n        y: node.y,\n        label: node.label,\n        style: {\n          fill: 'black',\n          fontSize: '12px'\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","XYPlot","XAxis","YAxis","VerticalGridLines","HorizontalGridLines","LineSeries","MarkSeries","LabelSeries","jsxDEV","_jsxDEV","GraphVisualization","graphData","console","log","nodePositions","angleIncrement","Math","PI","nodos","length","forEach","nodo","index","angle","id","x","cos","y","sin","label","nombre","nodes","Object","values","edges","aristas","map","arista","startNode","nodoInicio","endNode","nodoFin","width","height","xDomain","yDomain","children","fileName","_jsxFileName","lineNumber","columnNumber","edge","data","style","stroke","node","size","fill","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/tenci/OneDrive/Escritorio/Nueva carpeta/TREN_Aplicaci-n_web_cobros/TrainApp/src/GraphVisualization.js"],"sourcesContent":["import React from 'react';\r\nimport { XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries, MarkSeries, LabelSeries } from 'react-vis';\r\n\r\nconst GraphVisualization = ({ graphData }) => {\r\n  console.log('Graph data in visualization:', graphData);\r\n\r\n  // Assign positions for nodes\r\n  const nodePositions = {};\r\n  const angleIncrement = (2 * Math.PI) / graphData.nodos.length;\r\n  graphData.nodos.forEach((nodo, index) => {\r\n    const angle = index * angleIncrement;\r\n    nodePositions[nodo.id] = {\r\n      x: 50 + 40 * Math.cos(angle),\r\n      y: 50 + 40 * Math.sin(angle),\r\n      label: nodo.nombre\r\n    };\r\n  });\r\n\r\n  const nodes = Object.values(nodePositions);\r\n\r\n  const edges = graphData.aristas.map((arista) => {\r\n    const startNode = nodePositions[arista.nodoInicio];\r\n    const endNode = nodePositions[arista.nodoFin];\r\n\r\n    return {\r\n      x: [startNode.x, endNode.x],\r\n      y: [startNode.y, endNode.y]\r\n    };\r\n  });\r\n\r\n  return (\r\n    <XYPlot width={300} height={300} xDomain={[0, 100]} yDomain={[0, 100]}>\r\n      <VerticalGridLines />\r\n      <HorizontalGridLines />\r\n      <XAxis />\r\n      <YAxis />\r\n      {edges.map((edge, index) => (\r\n        <LineSeries\r\n          key={index}\r\n          data={[\r\n            { x: edge.x[0], y: edge.y[0] },\r\n            { x: edge.x[1], y: edge.y[1] }\r\n          ]}\r\n          style={{ stroke: 'blue' }}\r\n        />\r\n      ))}\r\n      <MarkSeries\r\n        data={nodes.map((node) => ({ x: node.x, y: node.y }))}\r\n        size={5}\r\n        style={{ fill: 'red' }}\r\n      />\r\n      <LabelSeries\r\n        data={nodes.map((node) => ({\r\n          x: node.x,\r\n          y: node.y,\r\n          label: node.label,\r\n          style: { fill: 'black', fontSize: '12px' }\r\n        }))}\r\n      />\r\n    </XYPlot>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}