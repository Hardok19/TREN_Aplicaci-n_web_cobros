{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-transition'), require('d3-timer'), require('d3-interpolate'), require('d3-zoom'), require('viz.js/viz'), require('d3-format'), require('d3-path')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-transition', 'd3-timer', 'd3-interpolate', 'd3-zoom', 'viz.js/viz', 'd3-format', 'd3-path'], factory) : factory(global['d3-graphviz'] = {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3, global.Viz, global.d3, global.d3);\n})(this, function (exports, d3, d3Dispatch, d3Transition, d3Timer, d3Interpolate, d3Zoom, Viz, d3Format, d3Path) {\n  'use strict';\n\n  Viz = Viz && Viz.hasOwnProperty('default') ? Viz['default'] : Viz;\n  function extractElementData(element) {\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n    if (tag == '#text') {\n      datum.text = element.text();\n    } else if (tag == '#comment') {\n      datum.comment = element.text();\n    }\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n    if (attributes) {\n      for (var i = 0; i < attributes.length; i++) {\n        var attribute = attributes[i];\n        var name = attribute.name;\n        var value = attribute.value;\n        datum.attributes[name] = value;\n      }\n    }\n    var transform = element.node().transform;\n    if (transform && transform.baseVal.numberOfItems != 0) {\n      var matrix = transform.baseVal.consolidate().matrix;\n      datum.translation = {\n        x: matrix.e,\n        y: matrix.f\n      };\n      datum.scale = matrix.a;\n    }\n    if (tag == 'ellipse') {\n      datum.center = {\n        x: datum.attributes.cx,\n        y: datum.attributes.cy\n      };\n    }\n    if (tag == 'polygon') {\n      var points = element.attr('points').split(' ');\n      var x = points.map(function (p) {\n        return p.split(',')[0];\n      });\n      var y = points.map(function (p) {\n        return p.split(',')[1];\n      });\n      var xmin = Math.min.apply(null, x);\n      var xmax = Math.max.apply(null, x);\n      var ymin = Math.min.apply(null, y);\n      var ymax = Math.max.apply(null, y);\n      var bbox = {\n        x: xmin,\n        y: ymin,\n        width: xmax - xmin,\n        height: ymax - ymin\n      };\n      datum.bbox = bbox;\n      datum.center = {\n        x: (xmin + xmax) / 2,\n        y: (ymin + ymax) / 2\n      };\n    }\n    if (tag == 'path') {\n      var d = element.attr('d');\n      var points = d.split(/[A-Z ]/);\n      points.shift();\n      var x = points.map(function (p) {\n        return +p.split(',')[0];\n      });\n      var y = points.map(function (p) {\n        return +p.split(',')[1];\n      });\n      var xmin = Math.min.apply(null, x);\n      var xmax = Math.max.apply(null, x);\n      var ymin = Math.min.apply(null, y);\n      var ymax = Math.max.apply(null, y);\n      var bbox = {\n        x: xmin,\n        y: ymin,\n        width: xmax - xmin,\n        height: ymax - ymin\n      };\n      datum.bbox = bbox;\n      datum.center = {\n        x: (xmin + xmax) / 2,\n        y: (ymin + ymax) / 2\n      };\n      datum.totalLength = element.node().getTotalLength();\n    }\n    if (tag == 'text') {\n      datum.center = {\n        x: element.attr('x'),\n        y: element.attr('y')\n      };\n    }\n    if (tag == '#text') {\n      datum.text = element.text();\n    } else if (tag == '#comment') {\n      datum.comment = element.text();\n    }\n    return datum;\n  }\n  function extractAllElementsData(element) {\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n      var childData = extractAllElementsData(d3.select(this));\n      childData.parent = datum;\n      datum.children.push(childData);\n    });\n    return datum;\n  }\n  function createElement(data) {\n    if (data.tag == '#text') {\n      return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n      return document.createComment(data.comment);\n    } else {\n      return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n  }\n  function createElementWithAttributes(data) {\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var attributeName = _step.value;\n        var attributeValue = attributes[attributeName];\n        element.attr(attributeName, attributeValue);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    return elementNode;\n  }\n  function replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n      return newElementNode;\n    }, function () {\n      return element.node();\n    });\n    element.remove();\n    return newElement;\n  }\n  function insertElementData(element, datum) {\n    element.datum(datum);\n    element.data([datum], function (d) {\n      return d.key;\n    });\n  }\n  function insertAllElementsData(element, datum) {\n    insertElementData(element, datum);\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function (d, i) {\n      insertAllElementsData(d3.select(this), datum.children[i]);\n    });\n  }\n  function insertChildren(element, index) {\n    var children = element.selectAll(function () {\n      return element.node().childNodes;\n    });\n    children = children.data(function (d) {\n      return d.children;\n    }, function (d) {\n      return d.tag + '-' + index;\n    });\n    var childrenEnter = children.enter().append(function (d) {\n      return createElement(d);\n    });\n    var childrenExit = children.exit();\n    childrenExit = childrenExit.remove();\n    children = childrenEnter.merge(children);\n    var childTagIndexes = {};\n    children.each(function (childData) {\n      var childTag = childData.tag;\n      if (childTagIndexes[childTag] == null) {\n        childTagIndexes[childTag] = 0;\n      }\n      var childIndex = childTagIndexes[childTag]++;\n      attributeElement.call(this, childData, childIndex);\n    });\n  }\n  function attributeElement(data) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var element = d3.select(this);\n    var tag = data.tag;\n    var attributes = data.attributes;\n    var currentAttributes = element.node().attributes;\n    if (currentAttributes) {\n      for (var i = 0; i < currentAttributes.length; i++) {\n        var currentAttribute = currentAttributes[i];\n        var name = currentAttribute.name;\n        if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n          var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n          var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n          name = namespace + ':' + name;\n        }\n        if (!(name in attributes)) {\n          attributes[name] = null;\n        }\n      }\n    }\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n    try {\n      for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var attributeName = _step2.value;\n        element.attr(attributeName, attributes[attributeName]);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n    if (data.text) {\n      element.text(data.text);\n    }\n    insertChildren(element, index);\n  }\n  function shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n  }\n  function roundTo4Decimals(x) {\n    return Math.round(x * 10000.0) / 10000.0;\n  }\n  var zoom$1 = function (enable) {\n    this._options.zoom = enable;\n    if (this._options.zoom && !this._zoomBehavior) {\n      createZoomBehavior.call(this);\n    }\n    return this;\n  };\n  function createZoomBehavior() {\n    function zoomed() {\n      var g = d3.select(svg.node().querySelector(\"g\"));\n      g.attr('transform', d3.event.transform);\n    }\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n    if (svg.size() == 0) {\n      return this;\n    }\n    this._zoomSelection = svg;\n    var zoomBehavior = d3Zoom.zoom().scaleExtent(this._options.zoomScaleExtent).translateExtent(this._options.zoomTranslateExtent).interpolate(d3Interpolate.interpolate).on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n    if (!this._active) {\n      translateZoomBehaviorTransform.call(this, g);\n    }\n    this._originalTransform = d3Zoom.zoomTransform(svg.node());\n    return this;\n  }\n  function getTranslatedZoomTransform(selection$$1) {\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var oldScale = this._scale;\n    var newTranslation = selection$$1.datum().translation;\n    var newScale = selection$$1.datum().scale;\n    var t = d3Zoom.zoomTransform(this._zoomSelection.node());\n    if (oldTranslation) {\n      t = t.scale(1 / oldScale);\n      t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n    t = t.translate(newTranslation.x, newTranslation.y);\n    t = t.scale(newScale);\n    return t;\n  }\n  function translateZoomBehaviorTransform(selection$$1) {\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection$$1));\n\n    // Save the selections's new translation and scale.\n    this._translation = selection$$1.datum().translation;\n    this._scale = selection$$1.datum().scale;\n\n    // Set the original zoom transform to the translation and scale specified in\n    // the selection's data.\n    this._originalTransform = d3Zoom.zoomIdentity.translate(selection$$1.datum().translation.x, selection$$1.datum().translation.y).scale(selection$$1.datum().scale);\n  }\n  function resetZoom(transition$$1) {\n    // Reset the zoom transform to the original zoom transform.\n    var selection$$1 = this._zoomSelection;\n    if (transition$$1) {\n      selection$$1 = selection$$1.transition(transition$$1);\n    }\n    selection$$1.call(this._zoomBehavior.transform, this._originalTransform);\n    return this;\n  }\n  function zoomScaleExtent(extent) {\n    this._options.zoomScaleExtent = extent;\n    return this;\n  }\n  function zoomTranslateExtent(extent) {\n    this._options.zoomTranslateExtent = extent;\n    return this;\n  }\n  function zoomBehavior() {\n    return this._zoomBehavior || null;\n  }\n  function zoomSelection() {\n    return this._zoomSelection || null;\n  }\n  function pathTween(points, d1) {\n    return function () {\n      var pointInterpolators = points.map(function (p) {\n        return d3Interpolate.interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n      });\n      return function (t) {\n        return t < 1 ? \"M\" + pointInterpolators.map(function (p) {\n          return p(t);\n        }).join(\"L\") : d1;\n      };\n    };\n  }\n  function pathTweenPoints(node, d1, precision, precisionIsRelative) {\n    var path0 = node;\n    var path1 = path0.cloneNode();\n    var n0 = path0.getTotalLength();\n    var n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0];\n    var i = 0;\n    var dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);\n    while ((i += dt) < 1) {\n      distances.push(i);\n    }\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function (t) {\n      var p0 = path0.getPointAtLength(t * n0);\n      var p1 = path1.getPointAtLength(t * n1);\n      return [[p0.x, p0.y], [p1.x, p1.y]];\n    });\n    return points;\n  }\n  var data = function () {\n    return this._data || null;\n  };\n  function isEdgeElementParent(datum) {\n    return datum.attributes.class == 'edge' || datum.tag == 'a' && datum.parent.tag == 'g' && datum.parent.parent.attributes.class == 'edge';\n  }\n  function isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n  }\n  function getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n      return datum.parent;\n    } else {\n      // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n      return datum.parent.parent.parent;\n    }\n  }\n  function getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n      return e.tag == 'title';\n    });\n  }\n  var render = function (callback) {\n    if (this._busy) {\n      this._queue.push(this.render.bind(this, callback));\n      return this;\n    }\n    this._dispatch.call('renderStart', this);\n    if (this._transitionFactory) {\n      d3Timer.timeout(function () {\n        // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n        this._transition = d3Transition.transition(this._transitionFactory());\n        _render.call(this, callback);\n      }.bind(this), 0);\n    } else {\n      _render.call(this, callback);\n    }\n    return this;\n  };\n  function _render(callback) {\n    var transitionInstance = this._transition;\n    var fade = this._options.fade && transitionInstance != null;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;\n    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n    function insertChildren(element) {\n      var children = element.selectAll(function () {\n        return element.node().childNodes;\n      });\n      children = children.data(function (d) {\n        return d.children;\n      }, function (d) {\n        return d.key;\n      });\n      var childrenEnter = children.enter().append(function (d) {\n        var element = createElement(d);\n        if (d.tag == '#text' && fade) {\n          element.nodeValue = d.text;\n        }\n        return element;\n      });\n      if (fade || growEnteringEdges && isEdgeElementParent(element.datum())) {\n        var childElementsEnter = childrenEnter.filter(function (d) {\n          return d.tag[0] == '#' ? null : this;\n        }).each(function (d) {\n          var childEnter = d3.select(this);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n          try {\n            for (var _iterator = Object.keys(d.attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var attributeName = _step.value;\n              var attributeValue = d.attributes[attributeName];\n              childEnter.attr(attributeName, attributeValue);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        });\n        childElementsEnter.filter(function (d) {\n          return d.tag == 'svg' || d.tag == 'g' ? null : this;\n        }).style(\"opacity\", 0.0);\n      }\n      var childrenExit = children.exit();\n      if (attributer) {\n        childrenExit.each(attributer);\n      }\n      if (transitionInstance) {\n        childrenExit = childrenExit.transition(transitionInstance);\n        if (fade) {\n          childrenExit.filter(function (d) {\n            return d.tag[0] == '#' ? null : this;\n          }).style(\"opacity\", 0.0);\n        }\n      }\n      childrenExit = childrenExit.remove();\n      children = childrenEnter.merge(children);\n      children.each(attributeElement$$1);\n    }\n    function attributeElement$$1(data$$1) {\n      var element = d3.select(this);\n      if (data$$1.tag == \"svg\") {\n        var options = graphvizInstance._options;\n        if (options.width != null || options.height != null) {\n          var width = options.width;\n          var height = options.height;\n          if (width == null) {\n            width = data$$1.attributes.width.replace('pt', '') * 4 / 3;\n          } else {\n            element.attr(\"width\", width);\n            data$$1.attributes.width = width;\n          }\n          if (height == null) {\n            height = data$$1.attributes.height.replace('pt', '') * 4 / 3;\n          } else {\n            element.attr(\"height\", height);\n            data$$1.attributes.height = height;\n          }\n          if (!options.fit) {\n            element.attr(\"viewBox\", \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale);\n            data$$1.attributes.viewBox = \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale;\n          }\n        }\n        if (options.scale != 1 && (options.fit || options.width == null && options.height == null)) {\n          width = data$$1.attributes.viewBox.split(' ')[2];\n          height = data$$1.attributes.viewBox.split(' ')[3];\n          element.attr(\"viewBox\", \"0 0 \" + width / options.scale + \" \" + height / options.scale);\n          data$$1.attributes.viewBox = \"0 0 \" + width / options.scale + \" \" + height / options.scale;\n        }\n      }\n      if (attributer) {\n        element.each(attributer);\n      }\n      var tag = data$$1.tag;\n      var attributes = data$$1.attributes;\n      var currentAttributes = element.node().attributes;\n      if (currentAttributes) {\n        for (var i = 0; i < currentAttributes.length; i++) {\n          var currentAttribute = currentAttributes[i];\n          var name = currentAttribute.name;\n          if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n            var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n            var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n            name = namespace + ':' + name;\n          }\n          if (!(name in attributes)) {\n            attributes[name] = null;\n          }\n        }\n      }\n      var convertShape = false;\n      var convertPrevShape = false;\n      if (tweenShapes && transitionInstance) {\n        if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data$$1.alternativeOld) {\n          convertPrevShape = true;\n        }\n        if ((tag == 'polygon' || tag == 'ellipse') && data$$1.alternativeNew) {\n          convertShape = true;\n        }\n        if (this.nodeName == 'polygon' && tag == 'polygon') {\n          var prevData = extractElementData(element);\n          var prevPoints = prevData.attributes.points;\n          if (!convertEqualSidedPolygons) {\n            var nPrevPoints = prevPoints.split(' ').length;\n            var points = data$$1.attributes.points;\n            var nPoints = points.split(' ').length;\n            if (nPoints == nPrevPoints) {\n              convertShape = false;\n              convertPrevShape = false;\n            }\n          }\n        }\n        if (convertPrevShape) {\n          var prevPathData = data$$1.alternativeOld;\n          var pathElement = replaceElement(element, prevPathData);\n          pathElement.data([data$$1], function () {\n            return data$$1.key;\n          });\n          element = pathElement;\n        }\n        if (convertShape) {\n          var newPathData = data$$1.alternativeNew;\n          tag = 'path';\n          attributes = newPathData.attributes;\n        }\n      }\n      var elementTransition = element;\n      if (transitionInstance) {\n        elementTransition = elementTransition.transition(transitionInstance);\n        if (fade) {\n          elementTransition.filter(function (d) {\n            return d.tag[0] == '#' ? null : this;\n          }).style(\"opacity\", 1.0);\n        }\n        elementTransition.filter(function (d) {\n          return d.tag[0] == '#' ? null : this;\n        }).on(\"end\", function () {\n          d3.select(this).attr('style', null);\n        });\n      }\n      var growThisPath = growEnteringEdges && tag == 'path' && data$$1.offset;\n      if (growThisPath) {\n        var totalLength = data$$1.totalLength;\n        element.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).attr('transform', 'translate(' + data$$1.offset.x + ',' + data$$1.offset.y + ')');\n        attributes[\"stroke-dashoffset\"] = 0;\n        attributes['transform'] = 'translate(0,0)';\n        elementTransition.attr(\"stroke-dashoffset\", attributes[\"stroke-dashoffset\"]).attr('transform', attributes['transform']).on(\"start\", function () {\n          d3.select(this).style('opacity', null);\n        }).on(\"end\", function () {\n          d3.select(this).attr('stroke-dashoffset', null).attr('stroke-dasharray', null).attr('transform', null);\n        });\n      }\n      var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data$$1) && data$$1.offset;\n      if (moveThisPolygon) {\n        var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n        var p0 = edgePath.node().getPointAtLength(0);\n        var p1 = edgePath.node().getPointAtLength(data$$1.totalLength);\n        var p2 = edgePath.node().getPointAtLength(data$$1.totalLength - 1);\n        var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n        var x = p0.x - p1.x + data$$1.offset.x;\n        var y = p0.y - p1.y + data$$1.offset.y;\n        element.attr('transform', 'translate(' + x + ',' + y + ')');\n        elementTransition.attrTween(\"transform\", function () {\n          return function (t) {\n            var p = edgePath.node().getPointAtLength(data$$1.totalLength * t);\n            var p2 = edgePath.node().getPointAtLength(data$$1.totalLength * t + 1);\n            var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n            x = p.x - p1.x + data$$1.offset.x * (1 - t);\n            y = p.y - p1.y + data$$1.offset.y * (1 - t);\n            return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n          };\n        }).on(\"start\", function () {\n          d3.select(this).style('opacity', null);\n        }).on(\"end\", function () {\n          d3.select(this).attr('transform', null);\n        });\n      }\n      var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n      try {\n        for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var attributeName = _step2.value;\n          var attributeValue = attributes[attributeName];\n          if (tweenThisPath && attributeName == 'd') {\n            var points = (data$$1.alternativeOld || data$$1).points;\n            if (points) {\n              elementTransition.attrTween(\"d\", pathTween(points, attributeValue));\n            }\n          } else {\n            if (attributeName == 'transform' && data$$1.translation) {\n              if (transitionInstance) {\n                var onEnd = elementTransition.on(\"end\");\n                elementTransition.on(\"start\", function () {\n                  if (graphvizInstance._zoomBehavior) {\n                    // Update the transform to transition to, just before the transition starts\n                    // in order to catch changes between the transition scheduling to its start.\n                    elementTransition.tween(\"attr.transform\", function () {\n                      var node = this;\n                      return function (t) {\n                        node.setAttribute(\"transform\", d3Interpolate.interpolateTransformSvg(d3Zoom.zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                      };\n                    });\n                  }\n                }).on(\"end\", function () {\n                  onEnd.call(this);\n                  // Update the zoom transform to the new translated transform\n                  if (graphvizInstance._zoomBehavior) {\n                    translateZoomBehaviorTransform.call(graphvizInstance, element);\n                  }\n                });\n              } else {\n                if (graphvizInstance._zoomBehavior) {\n                  // Update the transform attribute to set with the current pan translation\n                  attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();\n                }\n              }\n            }\n            elementTransition.attr(attributeName, attributeValue);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      if (convertShape) {\n        elementTransition.on(\"end\", function (d, i, nodes) {\n          pathElement = d3.select(this);\n          var newElement = replaceElement(pathElement, d);\n          newElement.data([d], function () {\n            return d.key;\n          });\n        });\n      }\n      if (data$$1.text) {\n        elementTransition.text(data$$1.text);\n      }\n      insertChildren(element);\n    }\n    var root = this._selection;\n    if (transitionInstance != null) {\n      // Ensure original SVG shape elements are restored after transition before rendering new graph\n      var jobs = this._jobs;\n      if (graphvizInstance._active) {\n        jobs.push(null);\n        return this;\n      } else {\n        root.transition(transitionInstance).transition().duration(0).on(\"end\", function () {\n          graphvizInstance._active = false;\n          if (jobs.length != 0) {\n            jobs.shift();\n            graphvizInstance.render();\n          }\n        });\n        this._active = true;\n      }\n    }\n    if (transitionInstance != null) {\n      root.transition(transitionInstance).on(\"start\", function () {\n        graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n      }).on(\"end\", function () {\n        graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n      }).transition().duration(0).on(\"start\", function () {\n        graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n        graphvizInstance._dispatch.call('end', graphvizInstance);\n        if (callback) {\n          callback.call(graphvizInstance);\n        }\n      });\n    }\n    var data$$1 = this._data;\n    var svg = root.selectAll(\"svg\").data([data$$1], function (d) {\n      return d.key;\n    });\n    svg = svg.enter().append(\"svg\").merge(svg);\n    attributeElement$$1.call(svg.node(), data$$1);\n    if (this._options.zoom && !this._zoomBehavior) {\n      createZoomBehavior.call(this);\n    }\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n    if (transitionInstance == null) {\n      this._dispatch.call('end', this);\n      if (callback) {\n        callback.call(this);\n      }\n    }\n    return this;\n  }\n  function convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n      var newData = shallowCopyObject(originalData);\n      newData.tag = 'path';\n      var originalAttributes = originalData.attributes;\n      var newAttributes = shallowCopyObject(originalAttributes);\n      var newPointsString = originalAttributes.points;\n      if (guideData.tag == 'polygon') {\n        var bbox = originalData.bbox;\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n        var pointsString = originalAttributes.points;\n        var pointStrings = pointsString.split(' ');\n        var normPoints = pointStrings.map(function (p) {\n          var xy = p.split(',');\n          return [xy[0] - bbox.cx, xy[1] - bbox.cy];\n        });\n        var x0 = normPoints[normPoints.length - 1][0];\n        var y0 = normPoints[normPoints.length - 1][1];\n        for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n          var x1 = normPoints[i][0];\n          var y1 = normPoints[i][1];\n          var dx = x1 - x0;\n          var dy = y1 - y0;\n          if (dy == 0) {\n            continue;\n          } else {\n            var x2 = x0 - y0 * dx / dy;\n          }\n          if (0 <= x2 && x2 < Infinity && (x0 <= x2 && x2 <= x1 || x1 <= x2 && x2 <= x0)) {\n            break;\n          }\n        }\n        var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n        newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n        newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n        newPointsString = newPointStrings.join(' ');\n      }\n      newAttributes['d'] = 'M' + newPointsString + 'z';\n      delete newAttributes.points;\n      newData.attributes = newAttributes;\n    } else /* if (originalData.tag == 'ellipse') */{\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var cx = originalAttributes.cx;\n        var cy = originalAttributes.cy;\n        var rx = originalAttributes.rx;\n        var ry = originalAttributes.ry;\n        if (guideData.tag == 'polygon') {\n          var bbox = guideData.bbox;\n          bbox.cx = bbox.x + bbox.width / 2;\n          bbox.cy = bbox.y + bbox.height / 2;\n          var p = guideData.attributes.points.split(' ')[0].split(',');\n          var sx = p[0];\n          var sy = p[1];\n          var dx = sx - bbox.cx;\n          var dy = sy - bbox.cy;\n          var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n          var cosA = dx / l;\n          var sinA = -dy / l;\n        } else {\n          // if (guideData.tag == 'path') {\n          // FIXME: add support for getting start position from path\n          var cosA = 1;\n          var sinA = 0;\n        }\n        var x1 = rx * cosA;\n        var y1 = -ry * sinA;\n        var x2 = rx * -cosA;\n        var y2 = -ry * -sinA;\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n        delete newAttributes.cx;\n        delete newAttributes.cy;\n        delete newAttributes.rx;\n        delete newAttributes.ry;\n        newData.attributes = newAttributes;\n      }\n    return newData;\n  }\n  function translatePointsAttribute(pointsString, x, y) {\n    var pointStrings = pointsString.split(' ');\n    var points = pointStrings.map(function (p) {\n      return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n      return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n      return p.join(',');\n    });\n    var pointsString = pointStrings.join(' ');\n    pointsString = pointsString.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return pointsString;\n  }\n  function translateDAttribute(d, x, y) {\n    var pointStrings = d.split(/[A-Z ]/);\n    pointStrings.shift();\n    var commands = d.split(/[^[A-Z ]+/);\n    var points = pointStrings.map(function (p) {\n      return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n      return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n      return p.join(',');\n    });\n    d = commands.reduce(function (arr, v, i) {\n      return arr.concat(v, pointStrings[i]);\n    }, []).join('');\n    d = d.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return d;\n  }\n  function initViz() {\n    // force JIT compilation of Viz.js\n    if (this._worker == null) {\n      Viz(\"\");\n      this._dispatch.call(\"initEnd\", this);\n    } else {\n      var vizURL = this._vizURL;\n      var graphvizInstance = this;\n      this._worker.onmessage = function (event$$1) {\n        graphvizInstance._dispatch.call(\"initEnd\", this);\n      };\n      if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n        // Local URL. Prepend with local domain to be usable in web worker\n        vizURL = new window.URL(vizURL, document.location.href).href;\n      }\n      this._worker.postMessage({\n        dot: \"\",\n        vizURL: vizURL\n      });\n    }\n  }\n  var dot = function (src, callback) {\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._options.engine;\n    var images = this._images;\n    var totalMemory = this._options.totalMemory;\n    var keyMode = this._options.keyMode;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {\n      var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;\n      var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');\n    } else {\n      var tweenPrecision = this._options.tweenPrecision;\n      var tweenPrecisionIsRelative = false;\n    }\n    var growEnteringEdges = this._options.growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n    function setKey(datum, index) {\n      var tag = datum.tag;\n      if (keyMode == 'index') {\n        datum.key = index;\n      } else if (tag[0] != '#') {\n        if (keyMode == 'id') {\n          datum.key = datum.attributes.id;\n        } else if (keyMode == 'title') {\n          var title = datum.children.find(function (childData) {\n            return childData.tag == 'title';\n          });\n          if (title) {\n            if (title.children.length > 0) {\n              datum.key = title.children[0].text;\n            } else {\n              datum.key = '';\n            }\n          }\n        }\n      }\n      if (datum.key == null) {\n        if (tweenShapes) {\n          if (tag == 'ellipse' || tag == 'polygon') {\n            tag = 'path';\n          }\n        }\n        datum.key = tag + '-' + index;\n      }\n    }\n    function setId(datum, parentData) {\n      var id = (parentData ? parentData.id + '.' : '') + datum.key;\n      datum.id = id;\n    }\n    function addToDictionary(datum) {\n      dictionary[datum.id] = datum;\n    }\n    function calculateAlternativeShapeData(datum, prevDatum) {\n      if (tweenShapes && datum.id in prevDictionary) {\n        if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n          if (prevDatum.tag != 'path') {\n            datum.alternativeOld = convertToPathData(prevDatum, datum);\n          }\n          if (datum.tag != 'path') {\n            datum.alternativeNew = convertToPathData(datum, prevDatum);\n          }\n        }\n      }\n    }\n    function calculatePathTweenPoints(datum, prevDatum) {\n      if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || datum.alternativeOld && datum.alternativeOld.tag == 'path')) {\n        var attribute_d = (datum.alternativeNew || datum).attributes.d;\n        if (datum.alternativeOld) {\n          var oldNode = createElementWithAttributes(datum.alternativeOld);\n        } else {\n          var oldNode = createElementWithAttributes(prevDatum);\n        }\n        (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);\n      }\n    }\n    function postProcessDataPass1Local(datum) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parentData = arguments[2];\n      setKey(datum, index);\n      setId(datum, parentData);\n      var id = datum.id;\n      var prevDatum = prevDictionary[id];\n      addToDictionary(datum);\n      calculateAlternativeShapeData(datum, prevDatum);\n      calculatePathTweenPoints(datum, prevDatum);\n      var childTagIndexes = {};\n      datum.children.forEach(function (childData) {\n        var childTag = childData.tag;\n        if (childTag == 'ellipse' || childTag == 'polygon') {\n          childTag = 'path';\n        }\n        if (childTagIndexes[childTag] == null) {\n          childTagIndexes[childTag] = 0;\n        }\n        var childIndex = childTagIndexes[childTag]++;\n        postProcessDataPass1Local(childData, childIndex, datum);\n      });\n    }\n    function addToNodeDictionary(datum) {\n      var tag = datum.tag;\n      if (growEnteringEdges && datum.parent) {\n        if (datum.parent.attributes.class == 'node') {\n          if (tag == 'title') {\n            if (datum.children.length > 0) {\n              var child = datum.children[0];\n              var nodeId = child.text;\n            } else {\n              var nodeId = '';\n            }\n            nodeDictionary[nodeId] = datum.parent;\n          }\n        }\n      }\n    }\n    function extractGrowingEdgesData(datum) {\n      var id = datum.id;\n      var tag = datum.tag;\n      var prevDatum = prevDictionary[id];\n      if (growEnteringEdges && !prevDatum && datum.parent) {\n        if (isEdgeElement(datum)) {\n          if (tag == 'path' || tag == 'polygon') {\n            if (tag == 'polygon') {\n              var path$$1 = datum.parent.children.find(function (e) {\n                return e.tag == 'path';\n              });\n              datum.totalLength = path$$1.totalLength;\n            }\n            var title = getEdgeTitle(datum);\n            var child = title.children[0];\n            var nodeIds = child.text.split('->');\n            if (nodeIds.length != 2) {\n              nodeIds = child.text.split('--');\n            }\n            var startNodeId = nodeIds[0];\n            var startNode = nodeDictionary[startNodeId];\n            var prevStartNode = prevNodeDictionary[startNodeId];\n            if (prevStartNode) {\n              var i = startNode.children.findIndex(function (element, index) {\n                return element.tag == 'g';\n              });\n              if (i >= 0) {\n                var j = startNode.children[i].children.findIndex(function (element, index) {\n                  return element.tag == 'a';\n                });\n                startNode = startNode.children[i].children[j];\n              }\n              var i = prevStartNode.children.findIndex(function (element, index) {\n                return element.tag == 'g';\n              });\n              if (i >= 0) {\n                var j = prevStartNode.children[i].children.findIndex(function (element, index) {\n                  return element.tag == 'a';\n                });\n                prevStartNode = prevStartNode.children[i].children[j];\n              }\n              var startShapes = startNode.children;\n              for (var i = 0; i < startShapes.length; i++) {\n                if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {\n                  var startShape = startShapes[i];\n                  break;\n                }\n              }\n              var prevStartShapes = prevStartNode.children;\n              for (var i = 0; i < prevStartShapes.length; i++) {\n                if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {\n                  var prevStartShape = prevStartShapes[i];\n                  break;\n                }\n              }\n              if (prevStartShape && startShape) {\n                datum.offset = {\n                  x: prevStartShape.center.x - startShape.center.x,\n                  y: prevStartShape.center.y - startShape.center.y\n                };\n              } else {\n                datum.offset = {\n                  x: 0,\n                  y: 0\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n    function postProcessDataPass2Global(datum) {\n      addToNodeDictionary(datum);\n      extractGrowingEdgesData(datum);\n      datum.children.forEach(function (childData) {\n        postProcessDataPass2Global(childData);\n      });\n    }\n    this._dispatch.call(\"start\", this);\n    this._busy = true;\n    this._dispatch.call(\"layoutStart\", this);\n    var vizOptions = {\n      format: \"svg\",\n      engine: engine,\n      images: images,\n      totalMemory: totalMemory\n    };\n    if (this._worker) {\n      worker.postMessage({\n        dot: src,\n        options: vizOptions\n      });\n      worker.onmessage = function (event$$1) {\n        switch (event$$1.data.type) {\n          case \"done\":\n            return layoutDone.call(graphvizInstance, event$$1.data.svg);\n          case \"error\":\n            if (graphvizInstance._onerror) {\n              graphvizInstance._onerror(event$$1.data.error);\n            } else {\n              throw event$$1.data.error;\n            }\n            break;\n        }\n      };\n    } else {\n      try {\n        var svgDoc = Viz(src, vizOptions);\n      } catch (error) {\n        if (graphvizInstance._onerror) {\n          graphvizInstance._onerror(error.message);\n          return this;\n        } else {\n          throw error.message;\n        }\n      }\n      layoutDone.call(this, svgDoc);\n    }\n    function layoutDone(svgDoc) {\n      this._dispatch.call(\"layoutEnd\", this);\n      var newDoc = d3.select(document.createDocumentFragment()).append('div');\n      var parser = new window.DOMParser();\n      var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n      newDoc.append(function () {\n        return doc.documentElement;\n      });\n      var newSvg = newDoc.select('svg');\n      var data$$1 = extractAllElementsData(newSvg);\n      this._dispatch.call('dataExtractEnd', this);\n      postProcessDataPass1Local(data$$1);\n      this._dispatch.call('dataProcessPass1End', this);\n      postProcessDataPass2Global(data$$1);\n      this._dispatch.call('dataProcessPass2End', this);\n      this._data = data$$1;\n      this._dictionary = dictionary;\n      this._nodeDictionary = nodeDictionary;\n      this._extractData = function (element, childIndex, parentData) {\n        var data$$1 = extractAllElementsData(element);\n        postProcessDataPass1Local(data$$1, childIndex, parentData);\n        postProcessDataPass2Global(data$$1);\n        return data$$1;\n      };\n      this._busy = false;\n      this._dispatch.call('dataProcessEnd', this);\n      if (callback) {\n        callback.call(this);\n      }\n      if (this._queue.length > 0) {\n        var job = this._queue.shift();\n        job.call(this);\n      }\n    }\n    return this;\n  };\n  var renderDot = function (src, callback) {\n    var graphvizInstance = this;\n    this.dot(src, render);\n    function render() {\n      graphvizInstance.render(callback);\n    }\n    return this;\n  };\n  var transition$1 = function (name) {\n    if (name instanceof Function) {\n      this._transitionFactory = name;\n    } else {\n      this._transition = d3Transition.transition(name);\n    }\n    return this;\n  };\n  function active$1(name) {\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    if (svg.size() != 0) {\n      return d3Transition.active(svg.node(), name);\n    } else {\n      return null;\n    }\n  }\n  var options = function (options) {\n    if (typeof options == 'undefined') {\n      return Object.assign({}, this._options);\n    } else {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = Object.keys(options)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          this._options[option] = options[option];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return this;\n    }\n  };\n  var width = function (width) {\n    this._options.width = width;\n    return this;\n  };\n  var height = function (height) {\n    this._options.height = height;\n    return this;\n  };\n  var scale = function (scale) {\n    this._options.scale = scale;\n    return this;\n  };\n  var fit = function (fit) {\n    this._options.fit = fit;\n    return this;\n  };\n  var attributer = function (callback) {\n    this._attributer = callback;\n    return this;\n  };\n  var engine = function (engine) {\n    this._options.engine = engine;\n    return this;\n  };\n  var images = function (path$$1, width, height) {\n    this._images.push({\n      path: path$$1,\n      width: width,\n      height: height\n    });\n    return this;\n  };\n  var totalMemory = function (size) {\n    this._options.totalMemory = size;\n    return this;\n  };\n  var keyMode = function (keyMode) {\n    if (!this._keyModes.has(keyMode)) {\n      throw Error('Illegal keyMode: ' + keyMode);\n    }\n    if (keyMode != this._options.keyMode && this._data != null) {\n      throw Error('Too late to change keyMode');\n    }\n    this._options.keyMode = keyMode;\n    return this;\n  };\n  var fade = function (enable) {\n    this._options.fade = enable;\n    return this;\n  };\n  var tweenPaths = function (enable) {\n    this._options.tweenPaths = enable;\n    return this;\n  };\n  var tweenShapes = function (enable) {\n    this._options.tweenShapes = enable;\n    if (enable) {\n      this._options.tweenPaths = true;\n    }\n    return this;\n  };\n  var convertEqualSidedPolygons = function (enable) {\n    this._options.convertEqualSidedPolygons = enable;\n    return this;\n  };\n  var tweenPrecision = function (precision) {\n    this._options.tweenPrecision = precision;\n    return this;\n  };\n  var growEnteringEdges = function (enable) {\n    this._options.growEnteringEdges = enable;\n    return this;\n  };\n  var on = function (typenames, callback) {\n    this._dispatch.on(typenames, callback);\n    return this;\n  };\n  var onerror = function (callback) {\n    this._onerror = callback;\n    return this;\n  };\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  };\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n  var logEvents = function (enable) {\n    var _this = this;\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max.apply(Math, toConsumableArray(eventTypes.map(function (eventType) {\n      return eventType.length;\n    })));\n    var _loop = function _loop(i) {\n      var eventType = eventTypes[i];\n      times[eventType] = [];\n      graphvizInstance = _this;\n      _this.on(eventType + '.log', enable ? function () {\n        var t = Date.now();\n        var seqNo = times[eventType].length;\n        times[eventType].push(t);\n        var string = '';\n        string += 'Event ';\n        string += d3Format.format(' >2')(i) + ' ';\n        string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n        string += d3Format.format(' >5')(t - t0) + ' ';\n        if (eventType != 'initEnd') {\n          string += d3Format.format(' >5')(t - times['start'][seqNo]);\n        }\n        if (eventType == 'dataProcessEnd') {\n          string += ' prepare                 ' + d3Format.format(' >5')(t - times['layoutEnd'][seqNo]);\n        }\n        if (eventType == 'renderEnd' && graphvizInstance._transition) {\n          string += ' transition start margin ' + d3Format.format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n          expectedDelay = graphvizInstance._transition.delay();\n          expectedDuration = graphvizInstance._transition.duration();\n        }\n        if (eventType == 'transitionStart') {\n          var actualDelay = t - times['renderStart'][seqNo];\n          string += ' transition delay        ' + d3Format.format(' >5')(t - times['renderStart'][seqNo]);\n          string += ' expected ' + d3Format.format(' >5')(expectedDelay);\n          string += ' diff ' + d3Format.format(' >5')(actualDelay - expectedDelay);\n        }\n        if (eventType == 'transitionEnd') {\n          var actualDuration = t - times['transitionStart'][seqNo];\n          string += ' transition duration     ' + d3Format.format(' >5')(actualDuration);\n          string += ' expected ' + d3Format.format(' >5')(expectedDuration);\n          string += ' diff ' + d3Format.format(' >5')(actualDuration - expectedDuration);\n        }\n        console.log(string);\n        t0 = t;\n      } : null);\n    };\n    for (var i in eventTypes) {\n      var graphvizInstance;\n      var expectedDelay;\n      var expectedDuration;\n      _loop(i);\n    }\n    return this;\n  };\n  function rotate(x, y, cosA, sinA) {\n    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)\n    y = -y;\n    sinA = -sinA;\n    var _ref = [x * cosA - y * sinA, x * sinA + y * cosA];\n    x = _ref[0];\n    y = _ref[1];\n    y = -y;\n    return [x, y];\n  }\n  function drawEdge(x1, y1, x2, y2, attributes) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n      var newEdge = d3.select(null);\n    } else {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var newEdge0 = createEdge(attributes);\n      var edgeData = extractAllElementsData(newEdge0);\n      var newEdge = graph0.append('g').data([edgeData]);\n      attributeElement.call(newEdge.node(), edgeData);\n      _updateEdge(newEdge, x1, y1, x2, y2, attributes, options);\n    }\n    this._drawnEdge = {\n      g: newEdge,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      attributes: attributes\n    };\n    return this;\n  }\n  function updateDrawnEdge(x1, y1, x2, y2) {\n    var attributes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    attributes = Object.assign(this._drawnEdge.attributes, attributes);\n    this._drawnEdge.x1 = x1;\n    this._drawnEdge.y1 = y1;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var edge = graph0.append('g');\n      this._drawnEdge.g = edge;\n    }\n    if (!edge.empty()) {\n      _updateEdge(edge, x1, y1, x2, y2, attributes, options);\n    }\n    return this;\n  }\n  function _updateEdge(edge, x1, y1, x2, y2, attributes, options) {\n    var newEdge = createEdge(attributes);\n    var edgeData = extractAllElementsData(newEdge);\n    edge.data([edgeData]);\n    attributeElement.call(edge.node(), edgeData);\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n  }\n  function _moveEdge(edge, x1, y1, x2, y2, attributes, options) {\n    var shortening = options.shortening || 0;\n    var arrowHeadLength = 10;\n    var arrowHeadWidth = 7;\n    var margin = 0.174;\n    var arrowHeadPoints = [[0, -arrowHeadWidth / 2], [arrowHeadLength, 0], [0, arrowHeadWidth / 2], [0, -arrowHeadWidth / 2]];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var length = Math.sqrt(dx * dx + dy * dy);\n    if (length == 0) {\n      var cosA = 1;\n      var sinA = 0;\n    } else {\n      var cosA = dx / length;\n      var sinA = dy / length;\n    }\n    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;\n    if (attributes.URL || attributes.tooltip) {\n      var a = edge.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n      var line = a.selectWithoutDataPropagation(\"path\");\n      var arrowHead = a.selectWithoutDataPropagation(\"polygon\");\n    } else {\n      var line = edge.selectWithoutDataPropagation(\"path\");\n      var arrowHead = edge.selectWithoutDataPropagation(\"polygon\");\n    }\n    var path1 = d3Path.path();\n    path1.moveTo(x1, y1);\n    path1.lineTo(x2, y2);\n    line.attr(\"d\", path1);\n    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);\n    }\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];\n    }\n    var allPoints = [];\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      allPoints.push(point.join(','));\n    }\n    var pointsAttr = allPoints.join(' ');\n    arrowHead.attr(\"points\", pointsAttr);\n    return this;\n  }\n  function moveDrawnEdgeEndPoint(x2, y2) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    var x1 = this._drawnEdge.x1;\n    var y1 = this._drawnEdge.y1;\n    var attributes = this._drawnEdge.attributes;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n    return this;\n  }\n  function removeDrawnEdge() {\n    if (!this._drawnEdge) {\n      return this;\n    }\n    var edge = this._drawnEdge.g;\n    edge.remove();\n    this._drawnEdge = null;\n    return this;\n  }\n  function insertDrawnEdge(name) {\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    if (edge.empty()) {\n      return this;\n    }\n    var attributes = this._drawnEdge.attributes;\n    var title = edge.selectWithoutDataPropagation(\"title\");\n    title.text(name);\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(edgeData);\n    insertAllElementsData(edge, edgeData);\n    this._drawnEdge = null;\n    return this;\n  }\n  function drawnEdgeSelection() {\n    if (this._drawnEdge) {\n      return this._drawnEdge.g;\n    } else {\n      return d3.select(null);\n    }\n  }\n  function createEdge(attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var name = _step.value;\n        if (attributes[name] != null) {\n          attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, {\n      format: 'svg'\n    });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n      return doc.documentElement;\n    });\n    var edge = newDoc.select('.edge');\n    return edge;\n  }\n  function drawNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n      var newNode = d3.select(null);\n    } else {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var newNode0 = createNode(nodeId, attributes);\n      var nodeData = extractAllElementsData(newNode0);\n      var newNode = graph0.append('g').data([nodeData]);\n      attributeElement.call(newNode.node(), nodeData);\n      _updateNode(newNode, x, y, nodeId, attributes, options);\n    }\n    this._drawnNode = {\n      g: newNode,\n      nodeId: nodeId,\n      x: x,\n      y: y,\n      attributes: attributes\n    };\n    return this;\n  }\n  function updateDrawnNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n    var node = this._drawnNode.g;\n    if (nodeId == null) {\n      nodeId = this._drawnNode.nodeId;\n    }\n    attributes = Object.assign(this._drawnNode.attributes, attributes);\n    this._drawnNode.nodeId = nodeId;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var node = graph0.append('g');\n      this._drawnNode.g = node;\n    }\n    if (!node.empty()) {\n      _updateNode(node, x, y, nodeId, attributes, options);\n    }\n    return this;\n  }\n  function _updateNode(node, x, y, nodeId, attributes, options) {\n    var newNode = createNode(nodeId, attributes);\n    var nodeData = extractAllElementsData(newNode);\n    node.data([nodeData]);\n    attributeElement.call(node.node(), nodeData);\n    _moveNode(node, x, y, attributes, options);\n    return this;\n  }\n  function _moveNode(node, x, y, attributes, options) {\n    if (attributes.URL || attributes.tooltip) {\n      var subParent = node.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n    } else {\n      var subParent = node;\n    }\n    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');\n    var text = node.selectWithoutDataPropagation(\"text\");\n    if (svgElements.size() != 0) {\n      var bbox = svgElements.node().getBBox();\n      bbox.cx = bbox.x + bbox.width / 2;\n      bbox.cy = bbox.y + bbox.height / 2;\n    } else if (text.size() != 0) {\n      bbox = {\n        x: +text.attr('x'),\n        y: +text.attr('y'),\n        width: 0,\n        height: 0,\n        cx: +text.attr('x'),\n        cy: +text.attr('y')\n      };\n    }\n    svgElements.each(function (data, index) {\n      var svgElement = d3.select(this);\n      if (svgElement.attr(\"cx\")) {\n        svgElement.attr(\"cx\", roundTo4Decimals(x)).attr(\"cy\", roundTo4Decimals(y));\n      } else if (svgElement.attr(\"points\")) {\n        var pointsString = svgElement.attr('points').trim();\n        svgElement.attr(\"points\", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));\n      } else {\n        var d = svgElement.attr('d');\n        svgElement.attr(\"d\", translateDAttribute(d, x - bbox.cx, y - bbox.cy));\n      }\n    });\n    if (text.size() != 0) {\n      text.attr(\"x\", roundTo4Decimals(+text.attr(\"x\") + x - bbox.cx)).attr(\"y\", roundTo4Decimals(+text.attr(\"y\") + y - bbox.cy));\n    }\n    return this;\n  }\n  function moveDrawnNode(x, y) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n    var node = this._drawnNode.g;\n    var attributes = this._drawnNode.attributes;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n    if (!node.empty()) {\n      _moveNode(node, x, y, attributes, options);\n    }\n    return this;\n  }\n  function removeDrawnNode() {\n    if (!this._drawnNode) {\n      return this;\n    }\n    var node = this._drawnNode.g;\n    if (!node.empty()) {\n      node.remove();\n    }\n    this._drawnNode = null;\n    return this;\n  }\n  function insertDrawnNode(nodeId) {\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n    if (nodeId == null) {\n      nodeId = this._drawnNode.nodeId;\n    }\n    var node = this._drawnNode.g;\n    if (node.empty()) {\n      return this;\n    }\n    var attributes = this._drawnNode.attributes;\n    var title = node.selectWithoutDataPropagation(\"title\");\n    title.text(nodeId);\n    if (attributes.URL || attributes.tooltip) {\n      var ga = node.selectWithoutDataPropagation(\"g\");\n      var a = ga.selectWithoutDataPropagation(\"a\");\n      var svgElement = a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n      var text = a.selectWithoutDataPropagation('text');\n    } else {\n      var svgElement = node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n      var text = node.selectWithoutDataPropagation('text');\n    }\n    text.text(attributes.label || nodeId);\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(nodeData);\n    insertAllElementsData(node, nodeData);\n    this._drawnNode = null;\n    return this;\n  }\n  function drawnNodeSelection() {\n    if (this._drawnNode) {\n      return this._drawnNode.g;\n    } else {\n      return d3.select(null);\n    }\n  }\n  function createNode(nodeId, attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var name = _step.value;\n        if (attributes[name] != null) {\n          attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n    var dotSrc = 'graph {\"' + nodeId + '\" [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, {\n      format: 'svg'\n    });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n      return doc.documentElement;\n    });\n    var node = newDoc.select('.node');\n    return node;\n  }\n  var _graphviz$prototype;\n  function Graphviz(selection$$1, options$$1) {\n    this._options = {\n      useWorker: true,\n      engine: 'dot',\n      totalMemory: undefined,\n      keyMode: 'title',\n      fade: true,\n      tweenPaths: true,\n      tweenShapes: true,\n      convertEqualSidedPolygons: true,\n      tweenPrecision: 1,\n      growEnteringEdges: true,\n      zoom: true,\n      zoomScaleExtent: [0.1, 10],\n      zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],\n      width: null,\n      height: null,\n      scale: 1,\n      fit: false\n    };\n    if (options$$1 instanceof Object) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n      try {\n        for (var _iterator = Object.keys(options$$1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          this._options[option] = options$$1[option];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (typeof options$$1 == 'boolean') {\n      this._options.useWorker = options$$1;\n    }\n    var useWorker = this._options.useWorker;\n    if (typeof Worker == 'undefined') {\n      useWorker = false;\n    }\n    if (useWorker) {\n      var scripts = d3.selectAll('script');\n      var vizScript = scripts.filter(function () {\n        return d3.select(this).attr('type') == 'javascript/worker' || d3.select(this).attr('src') && d3.select(this).attr('src').match(/.*\\/viz.js$/);\n      });\n      if (vizScript.size() == 0) {\n        console.warn('No script tag of type \"javascript/worker\" was found and \"useWorker\" is true. Not using web worker.');\n        useWorker = false;\n      } else {\n        this._vizURL = vizScript.attr('src');\n        if (!this._vizURL) {\n          console.warn('No \"src\" attribute of was found on the \"javascript/worker\" script tag and \"useWorker\" is true. Not using web worker.');\n          useWorker = false;\n        }\n      }\n    }\n    if (useWorker) {\n      var js = \"\\n            onmessage = function(event) {\\n                if (event.data.vizURL) {\\n                    importScripts(event.data.vizURL);\\n                }\\n                try {\\n                    var svg = Viz(event.data.dot, event.data.options);\\n                }\\n                catch(error) {\\n                    postMessage({\\n                        type: \\\"error\\\",\\n                        error: error.message,\\n                    });\\n                    return;\\n                }\\n                if (svg) {\\n                    postMessage({\\n                        type: \\\"done\\\",\\n                        svg: svg,\\n                    });\\n                } else {\\n                    postMessage({\\n                        type: \\\"skip\\\",\\n                    });\\n                }\\n            }\\n        \";\n      var blob = new Blob([js]);\n      var blobURL = window.URL.createObjectURL(blob);\n      this._worker = new Worker(blobURL);\n    }\n    this._selection = selection$$1;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set(['title', 'id', 'tag-index', 'index']);\n    this._images = [];\n    this._translation = undefined;\n    this._scale = undefined;\n    this._eventTypes = ['initEnd', 'start', 'layoutStart', 'layoutEnd', 'dataExtractEnd', 'dataProcessPass1End', 'dataProcessPass2End', 'dataProcessEnd', 'renderStart', 'renderEnd', 'transitionStart', 'transitionEnd', 'restoreEnd', 'end'];\n    this._dispatch = d3Dispatch.dispatch.apply(undefined, toConsumableArray(this._eventTypes));\n    initViz.call(this);\n    selection$$1.node().__graphviz__ = this;\n  }\n  function graphviz(selector, options$$1) {\n    var g = d3.select(selector).graphviz(options$$1);\n    return g;\n  }\n  Graphviz.prototype = graphviz.prototype = (_graphviz$prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    totalMemory: totalMemory,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom$1,\n    resetZoom: resetZoom,\n    zoomBehavior: zoomBehavior,\n    zoomSelection: zoomSelection,\n    zoomScaleExtent: zoomScaleExtent,\n    zoomTranslateExtent: zoomTranslateExtent,\n    render: render,\n    dot: dot,\n    data: data,\n    renderDot: renderDot,\n    transition: transition$1,\n    active: active$1,\n    options: options,\n    width: width,\n    height: height,\n    scale: scale,\n    fit: fit,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n    drawEdge: drawEdge,\n    updateDrawnEdge: updateDrawnEdge,\n    moveDrawnEdgeEndPoint: moveDrawnEdgeEndPoint,\n    insertDrawnEdge: insertDrawnEdge,\n    removeDrawnEdge: removeDrawnEdge\n  }, defineProperty(_graphviz$prototype, \"removeDrawnEdge\", removeDrawnEdge), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawNode\", drawNode), defineProperty(_graphviz$prototype, \"updateDrawnNode\", updateDrawnNode), defineProperty(_graphviz$prototype, \"moveDrawnNode\", moveDrawnNode), defineProperty(_graphviz$prototype, \"insertDrawnNode\", insertDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), _graphviz$prototype);\n  var selection_graphviz = function (options) {\n    var g = this.node().__graphviz__;\n    if (g) {\n      g.options(options);\n      g._dispatch.call(\"initEnd\", this);\n    } else {\n      g = new Graphviz(this, options);\n    }\n    return g;\n  };\n  var selection_selectWithoutDataPropagation = function (name) {\n    return d3.select(this.size() > 0 ? this.node().querySelector(name) : null);\n  };\n  d3.selection.prototype.graphviz = selection_graphviz;\n  d3.selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n  exports.graphviz = graphviz;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","d3","Viz","d3Dispatch","d3Transition","d3Timer","d3Interpolate","d3Zoom","d3Format","d3Path","hasOwnProperty","extractElementData","element","datum","tag","node","nodeName","text","comment","attributes","i","length","attribute","name","value","transform","baseVal","numberOfItems","matrix","consolidate","translation","x","e","y","f","scale","a","center","cx","cy","points","attr","split","map","p","xmin","Math","min","apply","xmax","max","ymin","ymax","bbox","width","height","d","shift","totalLength","getTotalLength","extractAllElementsData","children","selectAll","childNodes","each","childData","select","parent","push","createElement","data","document","createTextNode","createComment","createElementNS","createElementWithAttributes","elementNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Object","keys","Symbol","iterator","_step","next","done","attributeName","attributeValue","err","return","replaceElement","parentNode","newElementNode","newElement","insert","remove","insertElementData","key","insertAllElementsData","insertChildren","index","childrenEnter","enter","append","childrenExit","exit","merge","childTagIndexes","childTag","childIndex","attributeElement","call","arguments","currentAttributes","currentAttribute","namespaceURI","namespaceURIParts","namespace","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","shallowCopyObject","obj","assign","roundTo4Decimals","round","zoom$1","enable","_options","zoom","_zoomBehavior","createZoomBehavior","zoomed","g","svg","querySelector","event","root","_selection","size","_zoomSelection","zoomBehavior","scaleExtent","zoomScaleExtent","translateExtent","zoomTranslateExtent","interpolate","on","_active","translateZoomBehaviorTransform","_originalTransform","zoomTransform","getTranslatedZoomTransform","selection$$1","oldTranslation","_translation","oldScale","_scale","newTranslation","newScale","t","translate","zoomIdentity","resetZoom","transition$$1","transition","extent","zoomSelection","pathTween","d1","pointInterpolators","join","pathTweenPoints","precision","precisionIsRelative","path0","path1","cloneNode","n0","n1","setAttribute","distances","dt","p0","getPointAtLength","p1","_data","isEdgeElementParent","class","isEdgeElement","getEdgeGroup","getEdgeTitle","find","render","callback","_busy","_queue","bind","_dispatch","_transitionFactory","timeout","_transition","_render","transitionInstance","fade","tweenPaths","tweenShapes","convertEqualSidedPolygons","growEnteringEdges","attributer","_attributer","graphvizInstance","nodeValue","childElementsEnter","filter","childEnter","style","attributeElement$$1","data$$1","options","replace","fit","viewBox","convertShape","convertPrevShape","alternativeOld","alternativeNew","prevData","prevPoints","nPrevPoints","nPoints","prevPathData","pathElement","newPathData","elementTransition","growThisPath","offset","moveThisPolygon","edgePath","p2","angle1","atan2","PI","attrTween","angle","tweenThisPath","onEnd","tween","interpolateTransformSvg","toString","nodes","jobs","_jobs","duration","convertToPathData","originalData","guideData","newData","originalAttributes","newAttributes","newPointsString","pointsString","pointStrings","normPoints","xy","x0","y0","x1","y1","dx","dy","x2","Infinity","newPointStrings","concat","slice","rx","ry","sx","sy","l","sqrt","pow","cosA","sinA","y2","translatePointsAttribute","translateDAttribute","commands","reduce","arr","v","initViz","_worker","vizURL","_vizURL","onmessage","event$$1","match","window","URL","location","href","postMessage","dot","src","worker","engine","images","_images","totalMemory","keyMode","tweenPrecision","includes","tweenPrecisionIsRelative","dictionary","prevDictionary","_dictionary","nodeDictionary","prevNodeDictionary","_nodeDictionary","setKey","id","title","setId","parentData","addToDictionary","calculateAlternativeShapeData","prevDatum","calculatePathTweenPoints","attribute_d","oldNode","postProcessDataPass1Local","forEach","addToNodeDictionary","child","nodeId","extractGrowingEdgesData","path$$1","nodeIds","startNodeId","startNode","prevStartNode","findIndex","j","startShapes","startShape","prevStartShapes","prevStartShape","postProcessDataPass2Global","vizOptions","format","type","layoutDone","_onerror","error","svgDoc","message","newDoc","createDocumentFragment","parser","DOMParser","doc","parseFromString","documentElement","newSvg","_extractData","job","renderDot","transition$1","Function","active$1","selectWithoutDataPropagation","active","option","path","_keyModes","has","Error","typenames","onerror","defineProperty","enumerable","configurable","writable","toConsumableArray","Array","isArray","arr2","from","logEvents","_this","t0","Date","now","times","eventTypes","_eventTypes","maxEventTypeLength","eventType","_loop","seqNo","string","repeat","delay","expectedDelay","expectedDuration","actualDelay","actualDuration","console","log","rotate","_ref","drawEdge","newEdge","graph0","newEdge0","createEdge","edgeData","_updateEdge","_drawnEdge","updateDrawnEdge","edge","empty","_moveEdge","shortening","arrowHeadLength","arrowHeadWidth","margin","arrowHeadPoints","tooltip","line","arrowHead","moveTo","lineTo","point","allPoints","pointsAttr","moveDrawnEdgeEndPoint","removeDrawnEdge","insertDrawnEdge","graph0Datum","drawnEdgeSelection","attributesString","dotSrc","drawNode","newNode","newNode0","createNode","nodeData","_updateNode","_drawnNode","updateDrawnNode","_moveNode","subParent","svgElements","getBBox","svgElement","trim","moveDrawnNode","removeDrawnNode","insertDrawnNode","ga","label","drawnNodeSelection","_graphviz$prototype","Graphviz","options$$1","useWorker","Worker","scripts","vizScript","warn","js","blob","Blob","blobURL","createObjectURL","Set","dispatch","__graphviz__","graphviz","selector","prototype","constructor","addImage","selection_graphviz","selection_selectWithoutDataPropagation","selection"],"sources":["C:/Users/tenci/OneDrive/Escritorio/Nueva carpeta/TREN_Aplicaci-n_web_cobros/TrainApp/node_modules/d3-graphviz/build/d3-graphviz.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-transition'), require('d3-timer'), require('d3-interpolate'), require('d3-zoom'), require('viz.js/viz'), require('d3-format'), require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-transition', 'd3-timer', 'd3-interpolate', 'd3-zoom', 'viz.js/viz', 'd3-format', 'd3-path'], factory) :\n\t(factory((global['d3-graphviz'] = {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.Viz,global.d3,global.d3));\n}(this, (function (exports,d3,d3Dispatch,d3Transition,d3Timer,d3Interpolate,d3Zoom,Viz,d3Format,d3Path) { 'use strict';\n\nViz = Viz && Viz.hasOwnProperty('default') ? Viz['default'] : Viz;\n\nfunction extractElementData(element) {\n\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n    if (attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[i];\n            var name = attribute.name;\n            var value = attribute.value;\n            datum.attributes[name] = value;\n        }\n    }\n    var transform = element.node().transform;\n    if (transform && transform.baseVal.numberOfItems != 0) {\n        var matrix = transform.baseVal.consolidate().matrix;\n        datum.translation = { x: matrix.e, y: matrix.f };\n        datum.scale = matrix.a;\n    }\n    if (tag == 'ellipse') {\n        datum.center = {\n            x: datum.attributes.cx,\n            y: datum.attributes.cy\n        };\n    }\n    if (tag == 'polygon') {\n        var points = element.attr('points').split(' ');\n        var x = points.map(function (p) {\n            return p.split(',')[0];\n        });\n        var y = points.map(function (p) {\n            return p.split(',')[1];\n        });\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2\n        };\n    }\n    if (tag == 'path') {\n        var d = element.attr('d');\n        var points = d.split(/[A-Z ]/);\n        points.shift();\n        var x = points.map(function (p) {\n            return +p.split(',')[0];\n        });\n        var y = points.map(function (p) {\n            return +p.split(',')[1];\n        });\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2\n        };\n        datum.totalLength = element.node().getTotalLength();\n    }\n    if (tag == 'text') {\n        datum.center = {\n            x: element.attr('x'),\n            y: element.attr('y')\n        };\n    }\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    return datum;\n}\n\nfunction extractAllElementsData(element) {\n\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n        var childData = extractAllElementsData(d3.select(this));\n        childData.parent = datum;\n        datum.children.push(childData);\n    });\n    return datum;\n}\n\nfunction createElement(data) {\n\n    if (data.tag == '#text') {\n        return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n        return document.createComment(data.comment);\n    } else {\n        return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n}\n\nfunction createElementWithAttributes(data) {\n\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var attributeName = _step.value;\n\n            var attributeValue = attributes[attributeName];\n            element.attr(attributeName, attributeValue);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return elementNode;\n}\n\nfunction replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n        return newElementNode;\n    }, function () {\n        return element.node();\n    });\n    element.remove();\n    return newElement;\n}\n\nfunction insertElementData(element, datum) {\n    element.datum(datum);\n    element.data([datum], function (d) {\n        return d.key;\n    });\n}\n\nfunction insertAllElementsData(element, datum) {\n    insertElementData(element, datum);\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function (d, i) {\n        insertAllElementsData(d3.select(this), datum.children[i]);\n    });\n}\n\nfunction insertChildren(element, index) {\n    var children = element.selectAll(function () {\n        return element.node().childNodes;\n    });\n\n    children = children.data(function (d) {\n        return d.children;\n    }, function (d) {\n        return d.tag + '-' + index;\n    });\n    var childrenEnter = children.enter().append(function (d) {\n        return createElement(d);\n    });\n\n    var childrenExit = children.exit();\n    childrenExit = childrenExit.remove();\n    children = childrenEnter.merge(children);\n    var childTagIndexes = {};\n    children.each(function (childData) {\n        var childTag = childData.tag;\n        if (childTagIndexes[childTag] == null) {\n            childTagIndexes[childTag] = 0;\n        }\n        var childIndex = childTagIndexes[childTag]++;\n        attributeElement.call(this, childData, childIndex);\n    });\n}\n\nfunction attributeElement(data) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    var element = d3.select(this);\n    var tag = data.tag;\n    var attributes = data.attributes;\n    var currentAttributes = element.node().attributes;\n    if (currentAttributes) {\n        for (var i = 0; i < currentAttributes.length; i++) {\n            var currentAttribute = currentAttributes[i];\n            var name = currentAttribute.name;\n            if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                name = namespace + ':' + name;\n            }\n            if (!(name in attributes)) {\n                attributes[name] = null;\n            }\n        }\n    }\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var attributeName = _step2.value;\n\n            element.attr(attributeName, attributes[attributeName]);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    if (data.text) {\n        element.text(data.text);\n    }\n    insertChildren(element, index);\n}\n\nfunction shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n}\n\nfunction roundTo4Decimals(x) {\n    return Math.round(x * 10000.0) / 10000.0;\n}\n\nvar zoom$1 = function (enable) {\n\n    this._options.zoom = enable;\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    return this;\n};\n\nfunction createZoomBehavior() {\n\n    function zoomed() {\n        var g = d3.select(svg.node().querySelector(\"g\"));\n        g.attr('transform', d3.event.transform);\n    }\n\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n    if (svg.size() == 0) {\n        return this;\n    }\n    this._zoomSelection = svg;\n    var zoomBehavior = d3Zoom.zoom().scaleExtent(this._options.zoomScaleExtent).translateExtent(this._options.zoomTranslateExtent).interpolate(d3Interpolate.interpolate).on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n    if (!this._active) {\n        translateZoomBehaviorTransform.call(this, g);\n    }\n    this._originalTransform = d3Zoom.zoomTransform(svg.node());\n\n    return this;\n}\n\nfunction getTranslatedZoomTransform(selection$$1) {\n\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var oldScale = this._scale;\n    var newTranslation = selection$$1.datum().translation;\n    var newScale = selection$$1.datum().scale;\n    var t = d3Zoom.zoomTransform(this._zoomSelection.node());\n    if (oldTranslation) {\n        t = t.scale(1 / oldScale);\n        t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n    t = t.translate(newTranslation.x, newTranslation.y);\n    t = t.scale(newScale);\n    return t;\n}\n\nfunction translateZoomBehaviorTransform(selection$$1) {\n\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection$$1));\n\n    // Save the selections's new translation and scale.\n    this._translation = selection$$1.datum().translation;\n    this._scale = selection$$1.datum().scale;\n\n    // Set the original zoom transform to the translation and scale specified in\n    // the selection's data.\n    this._originalTransform = d3Zoom.zoomIdentity.translate(selection$$1.datum().translation.x, selection$$1.datum().translation.y).scale(selection$$1.datum().scale);\n}\n\nfunction resetZoom(transition$$1) {\n\n    // Reset the zoom transform to the original zoom transform.\n    var selection$$1 = this._zoomSelection;\n    if (transition$$1) {\n        selection$$1 = selection$$1.transition(transition$$1);\n    }\n    selection$$1.call(this._zoomBehavior.transform, this._originalTransform);\n\n    return this;\n}\n\nfunction zoomScaleExtent(extent) {\n\n    this._options.zoomScaleExtent = extent;\n\n    return this;\n}\n\nfunction zoomTranslateExtent(extent) {\n\n    this._options.zoomTranslateExtent = extent;\n\n    return this;\n}\n\nfunction zoomBehavior() {\n    return this._zoomBehavior || null;\n}\n\nfunction zoomSelection() {\n    return this._zoomSelection || null;\n}\n\nfunction pathTween(points, d1) {\n    return function () {\n        var pointInterpolators = points.map(function (p) {\n            return d3Interpolate.interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n        });\n        return function (t) {\n            return t < 1 ? \"M\" + pointInterpolators.map(function (p) {\n                return p(t);\n            }).join(\"L\") : d1;\n        };\n    };\n}\n\nfunction pathTweenPoints(node, d1, precision, precisionIsRelative) {\n    var path0 = node;\n    var path1 = path0.cloneNode();\n    var n0 = path0.getTotalLength();\n    var n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0];\n    var i = 0;\n    var dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);\n    while ((i += dt) < 1) {\n        distances.push(i);\n    }\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function (t) {\n        var p0 = path0.getPointAtLength(t * n0);\n        var p1 = path1.getPointAtLength(t * n1);\n        return [[p0.x, p0.y], [p1.x, p1.y]];\n    });\n    return points;\n}\n\nvar data = function () {\n    return this._data || null;\n};\n\nfunction isEdgeElementParent(datum) {\n    return datum.attributes.class == 'edge' || datum.tag == 'a' && datum.parent.tag == 'g' && datum.parent.parent.attributes.class == 'edge';\n}\n\nfunction isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n}\n\nfunction getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n        return datum.parent;\n    } else {\n        // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n        return datum.parent.parent.parent;\n    }\n}\n\nfunction getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n        return e.tag == 'title';\n    });\n}\n\nvar render = function (callback) {\n\n    if (this._busy) {\n        this._queue.push(this.render.bind(this, callback));\n        return this;\n    }\n    this._dispatch.call('renderStart', this);\n\n    if (this._transitionFactory) {\n        d3Timer.timeout(function () {\n            // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n            this._transition = d3Transition.transition(this._transitionFactory());\n            _render.call(this, callback);\n        }.bind(this), 0);\n    } else {\n        _render.call(this, callback);\n    }\n    return this;\n};\n\nfunction _render(callback) {\n\n    var transitionInstance = this._transition;\n    var fade = this._options.fade && transitionInstance != null;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;\n    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n\n    function insertChildren(element) {\n        var children = element.selectAll(function () {\n            return element.node().childNodes;\n        });\n\n        children = children.data(function (d) {\n            return d.children;\n        }, function (d) {\n            return d.key;\n        });\n        var childrenEnter = children.enter().append(function (d) {\n            var element = createElement(d);\n            if (d.tag == '#text' && fade) {\n                element.nodeValue = d.text;\n            }\n            return element;\n        });\n\n        if (fade || growEnteringEdges && isEdgeElementParent(element.datum())) {\n            var childElementsEnter = childrenEnter.filter(function (d) {\n                return d.tag[0] == '#' ? null : this;\n            }).each(function (d) {\n                var childEnter = d3.select(this);\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = Object.keys(d.attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var attributeName = _step.value;\n\n                        var attributeValue = d.attributes[attributeName];\n                        childEnter.attr(attributeName, attributeValue);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            });\n            childElementsEnter.filter(function (d) {\n                return d.tag == 'svg' || d.tag == 'g' ? null : this;\n            }).style(\"opacity\", 0.0);\n        }\n        var childrenExit = children.exit();\n        if (attributer) {\n            childrenExit.each(attributer);\n        }\n        if (transitionInstance) {\n            childrenExit = childrenExit.transition(transitionInstance);\n            if (fade) {\n                childrenExit.filter(function (d) {\n                    return d.tag[0] == '#' ? null : this;\n                }).style(\"opacity\", 0.0);\n            }\n        }\n        childrenExit = childrenExit.remove();\n        children = childrenEnter.merge(children);\n        children.each(attributeElement$$1);\n    }\n\n    function attributeElement$$1(data$$1) {\n        var element = d3.select(this);\n        if (data$$1.tag == \"svg\") {\n            var options = graphvizInstance._options;\n            if (options.width != null || options.height != null) {\n                var width = options.width;\n                var height = options.height;\n                if (width == null) {\n                    width = data$$1.attributes.width.replace('pt', '') * 4 / 3;\n                } else {\n                    element.attr(\"width\", width);\n                    data$$1.attributes.width = width;\n                }\n                if (height == null) {\n                    height = data$$1.attributes.height.replace('pt', '') * 4 / 3;\n                } else {\n                    element.attr(\"height\", height);\n                    data$$1.attributes.height = height;\n                }\n                if (!options.fit) {\n                    element.attr(\"viewBox\", \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale);\n                    data$$1.attributes.viewBox = \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale;\n                }\n            }\n            if (options.scale != 1 && (options.fit || options.width == null && options.height == null)) {\n                width = data$$1.attributes.viewBox.split(' ')[2];\n                height = data$$1.attributes.viewBox.split(' ')[3];\n                element.attr(\"viewBox\", \"0 0 \" + width / options.scale + \" \" + height / options.scale);\n                data$$1.attributes.viewBox = \"0 0 \" + width / options.scale + \" \" + height / options.scale;\n            }\n        }\n        if (attributer) {\n            element.each(attributer);\n        }\n        var tag = data$$1.tag;\n        var attributes = data$$1.attributes;\n        var currentAttributes = element.node().attributes;\n        if (currentAttributes) {\n            for (var i = 0; i < currentAttributes.length; i++) {\n                var currentAttribute = currentAttributes[i];\n                var name = currentAttribute.name;\n                if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                    var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                    var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                    name = namespace + ':' + name;\n                }\n                if (!(name in attributes)) {\n                    attributes[name] = null;\n                }\n            }\n        }\n        var convertShape = false;\n        var convertPrevShape = false;\n        if (tweenShapes && transitionInstance) {\n            if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data$$1.alternativeOld) {\n                convertPrevShape = true;\n            }\n            if ((tag == 'polygon' || tag == 'ellipse') && data$$1.alternativeNew) {\n                convertShape = true;\n            }\n            if (this.nodeName == 'polygon' && tag == 'polygon') {\n                var prevData = extractElementData(element);\n                var prevPoints = prevData.attributes.points;\n                if (!convertEqualSidedPolygons) {\n                    var nPrevPoints = prevPoints.split(' ').length;\n                    var points = data$$1.attributes.points;\n                    var nPoints = points.split(' ').length;\n                    if (nPoints == nPrevPoints) {\n                        convertShape = false;\n                        convertPrevShape = false;\n                    }\n                }\n            }\n            if (convertPrevShape) {\n                var prevPathData = data$$1.alternativeOld;\n                var pathElement = replaceElement(element, prevPathData);\n                pathElement.data([data$$1], function () {\n                    return data$$1.key;\n                });\n                element = pathElement;\n            }\n            if (convertShape) {\n                var newPathData = data$$1.alternativeNew;\n                tag = 'path';\n                attributes = newPathData.attributes;\n            }\n        }\n        var elementTransition = element;\n        if (transitionInstance) {\n            elementTransition = elementTransition.transition(transitionInstance);\n            if (fade) {\n                elementTransition.filter(function (d) {\n                    return d.tag[0] == '#' ? null : this;\n                }).style(\"opacity\", 1.0);\n            }\n            elementTransition.filter(function (d) {\n                return d.tag[0] == '#' ? null : this;\n            }).on(\"end\", function () {\n                d3.select(this).attr('style', null);\n            });\n        }\n        var growThisPath = growEnteringEdges && tag == 'path' && data$$1.offset;\n        if (growThisPath) {\n            var totalLength = data$$1.totalLength;\n            element.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).attr('transform', 'translate(' + data$$1.offset.x + ',' + data$$1.offset.y + ')');\n            attributes[\"stroke-dashoffset\"] = 0;\n            attributes['transform'] = 'translate(0,0)';\n            elementTransition.attr(\"stroke-dashoffset\", attributes[\"stroke-dashoffset\"]).attr('transform', attributes['transform']).on(\"start\", function () {\n                d3.select(this).style('opacity', null);\n            }).on(\"end\", function () {\n                d3.select(this).attr('stroke-dashoffset', null).attr('stroke-dasharray', null).attr('transform', null);\n            });\n        }\n        var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data$$1) && data$$1.offset;\n        if (moveThisPolygon) {\n            var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n            var p0 = edgePath.node().getPointAtLength(0);\n            var p1 = edgePath.node().getPointAtLength(data$$1.totalLength);\n            var p2 = edgePath.node().getPointAtLength(data$$1.totalLength - 1);\n            var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n            var x = p0.x - p1.x + data$$1.offset.x;\n            var y = p0.y - p1.y + data$$1.offset.y;\n            element.attr('transform', 'translate(' + x + ',' + y + ')');\n            elementTransition.attrTween(\"transform\", function () {\n                return function (t) {\n                    var p = edgePath.node().getPointAtLength(data$$1.totalLength * t);\n                    var p2 = edgePath.node().getPointAtLength(data$$1.totalLength * t + 1);\n                    var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n                    x = p.x - p1.x + data$$1.offset.x * (1 - t);\n                    y = p.y - p1.y + data$$1.offset.y * (1 - t);\n                    return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n                };\n            }).on(\"start\", function () {\n                d3.select(this).style('opacity', null);\n            }).on(\"end\", function () {\n                d3.select(this).attr('transform', null);\n            });\n        }\n        var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var attributeName = _step2.value;\n\n                var attributeValue = attributes[attributeName];\n                if (tweenThisPath && attributeName == 'd') {\n                    var points = (data$$1.alternativeOld || data$$1).points;\n                    if (points) {\n                        elementTransition.attrTween(\"d\", pathTween(points, attributeValue));\n                    }\n                } else {\n                    if (attributeName == 'transform' && data$$1.translation) {\n                        if (transitionInstance) {\n                            var onEnd = elementTransition.on(\"end\");\n                            elementTransition.on(\"start\", function () {\n                                if (graphvizInstance._zoomBehavior) {\n                                    // Update the transform to transition to, just before the transition starts\n                                    // in order to catch changes between the transition scheduling to its start.\n                                    elementTransition.tween(\"attr.transform\", function () {\n                                        var node = this;\n                                        return function (t) {\n                                            node.setAttribute(\"transform\", d3Interpolate.interpolateTransformSvg(d3Zoom.zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                                        };\n                                    });\n                                }\n                            }).on(\"end\", function () {\n                                onEnd.call(this);\n                                // Update the zoom transform to the new translated transform\n                                if (graphvizInstance._zoomBehavior) {\n                                    translateZoomBehaviorTransform.call(graphvizInstance, element);\n                                }\n                            });\n                        } else {\n                            if (graphvizInstance._zoomBehavior) {\n                                // Update the transform attribute to set with the current pan translation\n                                attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();\n                            }\n                        }\n                    }\n                    elementTransition.attr(attributeName, attributeValue);\n                }\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        if (convertShape) {\n            elementTransition.on(\"end\", function (d, i, nodes) {\n                pathElement = d3.select(this);\n                var newElement = replaceElement(pathElement, d);\n                newElement.data([d], function () {\n                    return d.key;\n                });\n            });\n        }\n        if (data$$1.text) {\n            elementTransition.text(data$$1.text);\n        }\n        insertChildren(element);\n    }\n\n    var root = this._selection;\n\n    if (transitionInstance != null) {\n        // Ensure original SVG shape elements are restored after transition before rendering new graph\n        var jobs = this._jobs;\n        if (graphvizInstance._active) {\n            jobs.push(null);\n            return this;\n        } else {\n            root.transition(transitionInstance).transition().duration(0).on(\"end\", function () {\n                graphvizInstance._active = false;\n                if (jobs.length != 0) {\n                    jobs.shift();\n                    graphvizInstance.render();\n                }\n            });\n            this._active = true;\n        }\n    }\n\n    if (transitionInstance != null) {\n        root.transition(transitionInstance).on(\"start\", function () {\n            graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n        }).on(\"end\", function () {\n            graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n        }).transition().duration(0).on(\"start\", function () {\n            graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n            graphvizInstance._dispatch.call('end', graphvizInstance);\n            if (callback) {\n                callback.call(graphvizInstance);\n            }\n        });\n    }\n\n    var data$$1 = this._data;\n\n    var svg = root.selectAll(\"svg\").data([data$$1], function (d) {\n        return d.key;\n    });\n    svg = svg.enter().append(\"svg\").merge(svg);\n\n    attributeElement$$1.call(svg.node(), data$$1);\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n\n    if (transitionInstance == null) {\n        this._dispatch.call('end', this);\n        if (callback) {\n            callback.call(this);\n        }\n    }\n\n    return this;\n}\n\nfunction convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var newPointsString = originalAttributes.points;\n        if (guideData.tag == 'polygon') {\n            var bbox = originalData.bbox;\n            bbox.cx = bbox.x + bbox.width / 2;\n            bbox.cy = bbox.y + bbox.height / 2;\n            var pointsString = originalAttributes.points;\n            var pointStrings = pointsString.split(' ');\n            var normPoints = pointStrings.map(function (p) {\n                var xy = p.split(',');return [xy[0] - bbox.cx, xy[1] - bbox.cy];\n            });\n            var x0 = normPoints[normPoints.length - 1][0];\n            var y0 = normPoints[normPoints.length - 1][1];\n            for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n                var x1 = normPoints[i][0];\n                var y1 = normPoints[i][1];\n                var dx = x1 - x0;\n                var dy = y1 - y0;\n                if (dy == 0) {\n                    continue;\n                } else {\n                    var x2 = x0 - y0 * dx / dy;\n                }\n                if (0 <= x2 && x2 < Infinity && (x0 <= x2 && x2 <= x1 || x1 <= x2 && x2 <= x0)) {\n                    break;\n                }\n            }\n            var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n            newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n            newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n            newPointsString = newPointStrings.join(' ');\n        }\n        newAttributes['d'] = 'M' + newPointsString + 'z';\n        delete newAttributes.points;\n        newData.attributes = newAttributes;\n    } else /* if (originalData.tag == 'ellipse') */{\n            var newData = shallowCopyObject(originalData);\n            newData.tag = 'path';\n            var originalAttributes = originalData.attributes;\n            var newAttributes = shallowCopyObject(originalAttributes);\n            var cx = originalAttributes.cx;\n            var cy = originalAttributes.cy;\n            var rx = originalAttributes.rx;\n            var ry = originalAttributes.ry;\n            if (guideData.tag == 'polygon') {\n                var bbox = guideData.bbox;\n                bbox.cx = bbox.x + bbox.width / 2;\n                bbox.cy = bbox.y + bbox.height / 2;\n                var p = guideData.attributes.points.split(' ')[0].split(',');\n                var sx = p[0];\n                var sy = p[1];\n                var dx = sx - bbox.cx;\n                var dy = sy - bbox.cy;\n                var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                var cosA = dx / l;\n                var sinA = -dy / l;\n            } else {\n                // if (guideData.tag == 'path') {\n                // FIXME: add support for getting start position from path\n                var cosA = 1;\n                var sinA = 0;\n            }\n            var x1 = rx * cosA;\n            var y1 = -ry * sinA;\n            var x2 = rx * -cosA;\n            var y2 = -ry * -sinA;\n            var dx = x2 - x1;\n            var dy = y2 - y1;\n            newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n            delete newAttributes.cx;\n            delete newAttributes.cy;\n            delete newAttributes.rx;\n            delete newAttributes.ry;\n            newData.attributes = newAttributes;\n        }\n    return newData;\n}\n\nfunction translatePointsAttribute(pointsString, x, y) {\n    var pointStrings = pointsString.split(' ');\n    var points = pointStrings.map(function (p) {\n        return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n        return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n        return p.join(',');\n    });\n    var pointsString = pointStrings.join(' ');\n    pointsString = pointsString.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return pointsString;\n}\n\nfunction translateDAttribute(d, x, y) {\n    var pointStrings = d.split(/[A-Z ]/);\n    pointStrings.shift();\n    var commands = d.split(/[^[A-Z ]+/);\n    var points = pointStrings.map(function (p) {\n        return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n        return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n        return p.join(',');\n    });\n    d = commands.reduce(function (arr, v, i) {\n        return arr.concat(v, pointStrings[i]);\n    }, []).join('');\n    d = d.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return d;\n}\n\nfunction initViz() {\n    // force JIT compilation of Viz.js\n    if (this._worker == null) {\n        Viz(\"\");\n        this._dispatch.call(\"initEnd\", this);\n    } else {\n        var vizURL = this._vizURL;\n        var graphvizInstance = this;\n        this._worker.onmessage = function (event$$1) {\n            graphvizInstance._dispatch.call(\"initEnd\", this);\n        };\n        if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n            // Local URL. Prepend with local domain to be usable in web worker\n            vizURL = new window.URL(vizURL, document.location.href).href;\n        }\n        this._worker.postMessage({ dot: \"\", vizURL: vizURL });\n    }\n}\n\nvar dot = function (src, callback) {\n\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._options.engine;\n    var images = this._images;\n    var totalMemory = this._options.totalMemory;\n    var keyMode = this._options.keyMode;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {\n        var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;\n        var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');\n    } else {\n        var tweenPrecision = this._options.tweenPrecision;\n        var tweenPrecisionIsRelative = false;\n    }\n    var growEnteringEdges = this._options.growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n\n    function setKey(datum, index) {\n        var tag = datum.tag;\n        if (keyMode == 'index') {\n            datum.key = index;\n        } else if (tag[0] != '#') {\n            if (keyMode == 'id') {\n                datum.key = datum.attributes.id;\n            } else if (keyMode == 'title') {\n                var title = datum.children.find(function (childData) {\n                    return childData.tag == 'title';\n                });\n                if (title) {\n                    if (title.children.length > 0) {\n                        datum.key = title.children[0].text;\n                    } else {\n                        datum.key = '';\n                    }\n                }\n            }\n        }\n        if (datum.key == null) {\n            if (tweenShapes) {\n                if (tag == 'ellipse' || tag == 'polygon') {\n                    tag = 'path';\n                }\n            }\n            datum.key = tag + '-' + index;\n        }\n    }\n\n    function setId(datum, parentData) {\n        var id = (parentData ? parentData.id + '.' : '') + datum.key;\n        datum.id = id;\n    }\n\n    function addToDictionary(datum) {\n        dictionary[datum.id] = datum;\n    }\n\n    function calculateAlternativeShapeData(datum, prevDatum) {\n        if (tweenShapes && datum.id in prevDictionary) {\n            if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n                if (prevDatum.tag != 'path') {\n                    datum.alternativeOld = convertToPathData(prevDatum, datum);\n                }\n                if (datum.tag != 'path') {\n                    datum.alternativeNew = convertToPathData(datum, prevDatum);\n                }\n            }\n        }\n    }\n\n    function calculatePathTweenPoints(datum, prevDatum) {\n        if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || datum.alternativeOld && datum.alternativeOld.tag == 'path')) {\n            var attribute_d = (datum.alternativeNew || datum).attributes.d;\n            if (datum.alternativeOld) {\n                var oldNode = createElementWithAttributes(datum.alternativeOld);\n            } else {\n                var oldNode = createElementWithAttributes(prevDatum);\n            }\n            (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);\n        }\n    }\n\n    function postProcessDataPass1Local(datum) {\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var parentData = arguments[2];\n\n        setKey(datum, index);\n        setId(datum, parentData);\n        var id = datum.id;\n        var prevDatum = prevDictionary[id];\n        addToDictionary(datum);\n        calculateAlternativeShapeData(datum, prevDatum);\n        calculatePathTweenPoints(datum, prevDatum);\n        var childTagIndexes = {};\n        datum.children.forEach(function (childData) {\n            var childTag = childData.tag;\n            if (childTag == 'ellipse' || childTag == 'polygon') {\n                childTag = 'path';\n            }\n            if (childTagIndexes[childTag] == null) {\n                childTagIndexes[childTag] = 0;\n            }\n            var childIndex = childTagIndexes[childTag]++;\n            postProcessDataPass1Local(childData, childIndex, datum);\n        });\n    }\n\n    function addToNodeDictionary(datum) {\n        var tag = datum.tag;\n        if (growEnteringEdges && datum.parent) {\n            if (datum.parent.attributes.class == 'node') {\n                if (tag == 'title') {\n                    if (datum.children.length > 0) {\n                        var child = datum.children[0];\n                        var nodeId = child.text;\n                    } else {\n                        var nodeId = '';\n                    }\n                    nodeDictionary[nodeId] = datum.parent;\n                }\n            }\n        }\n    }\n\n    function extractGrowingEdgesData(datum) {\n        var id = datum.id;\n        var tag = datum.tag;\n        var prevDatum = prevDictionary[id];\n        if (growEnteringEdges && !prevDatum && datum.parent) {\n            if (isEdgeElement(datum)) {\n                if (tag == 'path' || tag == 'polygon') {\n                    if (tag == 'polygon') {\n                        var path$$1 = datum.parent.children.find(function (e) {\n                            return e.tag == 'path';\n                        });\n                        datum.totalLength = path$$1.totalLength;\n                    }\n                    var title = getEdgeTitle(datum);\n                    var child = title.children[0];\n                    var nodeIds = child.text.split('->');\n                    if (nodeIds.length != 2) {\n                        nodeIds = child.text.split('--');\n                    }\n                    var startNodeId = nodeIds[0];\n                    var startNode = nodeDictionary[startNodeId];\n                    var prevStartNode = prevNodeDictionary[startNodeId];\n                    if (prevStartNode) {\n                        var i = startNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = startNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            startNode = startNode.children[i].children[j];\n                        }\n                        var i = prevStartNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = prevStartNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            prevStartNode = prevStartNode.children[i].children[j];\n                        }\n                        var startShapes = startNode.children;\n                        for (var i = 0; i < startShapes.length; i++) {\n                            if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {\n                                var startShape = startShapes[i];\n                                break;\n                            }\n                        }\n                        var prevStartShapes = prevStartNode.children;\n                        for (var i = 0; i < prevStartShapes.length; i++) {\n                            if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {\n                                var prevStartShape = prevStartShapes[i];\n                                break;\n                            }\n                        }\n                        if (prevStartShape && startShape) {\n                            datum.offset = {\n                                x: prevStartShape.center.x - startShape.center.x,\n                                y: prevStartShape.center.y - startShape.center.y\n                            };\n                        } else {\n                            datum.offset = { x: 0, y: 0 };\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function postProcessDataPass2Global(datum) {\n        addToNodeDictionary(datum);\n        extractGrowingEdgesData(datum);\n        datum.children.forEach(function (childData) {\n            postProcessDataPass2Global(childData);\n        });\n    }\n\n    this._dispatch.call(\"start\", this);\n    this._busy = true;\n    this._dispatch.call(\"layoutStart\", this);\n    var vizOptions = {\n        format: \"svg\",\n        engine: engine,\n        images: images,\n        totalMemory: totalMemory\n    };\n    if (this._worker) {\n        worker.postMessage({\n            dot: src,\n            options: vizOptions\n        });\n\n        worker.onmessage = function (event$$1) {\n            switch (event$$1.data.type) {\n                case \"done\":\n                    return layoutDone.call(graphvizInstance, event$$1.data.svg);\n                case \"error\":\n                    if (graphvizInstance._onerror) {\n                        graphvizInstance._onerror(event$$1.data.error);\n                    } else {\n                        throw event$$1.data.error;\n                    }\n                    break;\n            }\n        };\n    } else {\n        try {\n            var svgDoc = Viz(src, vizOptions);\n        } catch (error) {\n            if (graphvizInstance._onerror) {\n                graphvizInstance._onerror(error.message);\n                return this;\n            } else {\n                throw error.message;\n            }\n        }\n        layoutDone.call(this, svgDoc);\n    }\n\n    function layoutDone(svgDoc) {\n        this._dispatch.call(\"layoutEnd\", this);\n\n        var newDoc = d3.select(document.createDocumentFragment()).append('div');\n\n        var parser = new window.DOMParser();\n        var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n\n        newDoc.append(function () {\n            return doc.documentElement;\n        });\n\n        var newSvg = newDoc.select('svg');\n\n        var data$$1 = extractAllElementsData(newSvg);\n        this._dispatch.call('dataExtractEnd', this);\n        postProcessDataPass1Local(data$$1);\n        this._dispatch.call('dataProcessPass1End', this);\n        postProcessDataPass2Global(data$$1);\n        this._dispatch.call('dataProcessPass2End', this);\n        this._data = data$$1;\n        this._dictionary = dictionary;\n        this._nodeDictionary = nodeDictionary;\n\n        this._extractData = function (element, childIndex, parentData) {\n            var data$$1 = extractAllElementsData(element);\n            postProcessDataPass1Local(data$$1, childIndex, parentData);\n            postProcessDataPass2Global(data$$1);\n            return data$$1;\n        };\n        this._busy = false;\n        this._dispatch.call('dataProcessEnd', this);\n        if (callback) {\n            callback.call(this);\n        }\n        if (this._queue.length > 0) {\n            var job = this._queue.shift();\n            job.call(this);\n        }\n    }\n\n    return this;\n};\n\nvar renderDot = function (src, callback) {\n\n    var graphvizInstance = this;\n\n    this.dot(src, render);\n\n    function render() {\n        graphvizInstance.render(callback);\n    }\n\n    return this;\n};\n\nvar transition$1 = function (name) {\n\n    if (name instanceof Function) {\n        this._transitionFactory = name;\n    } else {\n        this._transition = d3Transition.transition(name);\n    }\n\n    return this;\n};\n\nfunction active$1(name) {\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    if (svg.size() != 0) {\n        return d3Transition.active(svg.node(), name);\n    } else {\n        return null;\n    }\n}\n\nvar options = function (options) {\n\n    if (typeof options == 'undefined') {\n        return Object.assign({}, this._options);\n    } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = Object.keys(options)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var option = _step.value;\n\n                this._options[option] = options[option];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return this;\n    }\n};\n\nvar width = function (width) {\n\n    this._options.width = width;\n\n    return this;\n};\n\nvar height = function (height) {\n\n    this._options.height = height;\n\n    return this;\n};\n\nvar scale = function (scale) {\n\n    this._options.scale = scale;\n\n    return this;\n};\n\nvar fit = function (fit) {\n\n    this._options.fit = fit;\n\n    return this;\n};\n\nvar attributer = function (callback) {\n\n    this._attributer = callback;\n\n    return this;\n};\n\nvar engine = function (engine) {\n\n    this._options.engine = engine;\n\n    return this;\n};\n\nvar images = function (path$$1, width, height) {\n\n    this._images.push({ path: path$$1, width: width, height: height });\n\n    return this;\n};\n\nvar totalMemory = function (size) {\n\n    this._options.totalMemory = size;\n\n    return this;\n};\n\nvar keyMode = function (keyMode) {\n\n    if (!this._keyModes.has(keyMode)) {\n        throw Error('Illegal keyMode: ' + keyMode);\n    }\n    if (keyMode != this._options.keyMode && this._data != null) {\n        throw Error('Too late to change keyMode');\n    }\n    this._options.keyMode = keyMode;\n\n    return this;\n};\n\nvar fade = function (enable) {\n\n    this._options.fade = enable;\n\n    return this;\n};\n\nvar tweenPaths = function (enable) {\n\n    this._options.tweenPaths = enable;\n\n    return this;\n};\n\nvar tweenShapes = function (enable) {\n\n    this._options.tweenShapes = enable;\n    if (enable) {\n        this._options.tweenPaths = true;\n    }\n\n    return this;\n};\n\nvar convertEqualSidedPolygons = function (enable) {\n\n    this._options.convertEqualSidedPolygons = enable;\n\n    return this;\n};\n\nvar tweenPrecision = function (precision) {\n\n    this._options.tweenPrecision = precision;\n\n    return this;\n};\n\nvar growEnteringEdges = function (enable) {\n\n    this._options.growEnteringEdges = enable;\n\n    return this;\n};\n\nvar on = function (typenames, callback) {\n\n    this._dispatch.on(typenames, callback);\n\n    return this;\n};\n\nvar onerror = function (callback) {\n\n    this._onerror = callback;\n\n    return this;\n};\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar logEvents = function (enable) {\n    var _this = this;\n\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max.apply(Math, toConsumableArray(eventTypes.map(function (eventType) {\n        return eventType.length;\n    })));\n\n    var _loop = function _loop(i) {\n        var eventType = eventTypes[i];\n        times[eventType] = [];\n        graphvizInstance = _this;\n\n        _this.on(eventType + '.log', enable ? function () {\n            var t = Date.now();\n            var seqNo = times[eventType].length;\n            times[eventType].push(t);\n            var string = '';\n            string += 'Event ';\n            string += d3Format.format(' >2')(i) + ' ';\n            string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n            string += d3Format.format(' >5')(t - t0) + ' ';\n            if (eventType != 'initEnd') {\n                string += d3Format.format(' >5')(t - times['start'][seqNo]);\n            }\n            if (eventType == 'dataProcessEnd') {\n                string += ' prepare                 ' + d3Format.format(' >5')(t - times['layoutEnd'][seqNo]);\n            }\n            if (eventType == 'renderEnd' && graphvizInstance._transition) {\n                string += ' transition start margin ' + d3Format.format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n                expectedDelay = graphvizInstance._transition.delay();\n                expectedDuration = graphvizInstance._transition.duration();\n            }\n            if (eventType == 'transitionStart') {\n                var actualDelay = t - times['renderStart'][seqNo];\n                string += ' transition delay        ' + d3Format.format(' >5')(t - times['renderStart'][seqNo]);\n                string += ' expected ' + d3Format.format(' >5')(expectedDelay);\n                string += ' diff ' + d3Format.format(' >5')(actualDelay - expectedDelay);\n            }\n            if (eventType == 'transitionEnd') {\n                var actualDuration = t - times['transitionStart'][seqNo];\n                string += ' transition duration     ' + d3Format.format(' >5')(actualDuration);\n                string += ' expected ' + d3Format.format(' >5')(expectedDuration);\n                string += ' diff ' + d3Format.format(' >5')(actualDuration - expectedDuration);\n            }\n            console.log(string);\n            t0 = t;\n        } : null);\n    };\n\n    for (var i in eventTypes) {\n        var graphvizInstance;\n        var expectedDelay;\n        var expectedDuration;\n\n        _loop(i);\n    }\n    return this;\n};\n\nfunction rotate(x, y, cosA, sinA) {\n    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)\n    y = -y;\n    sinA = -sinA;\n    var _ref = [x * cosA - y * sinA, x * sinA + y * cosA];\n    x = _ref[0];\n    y = _ref[1];\n\n    y = -y;\n    return [x, y];\n}\n\nfunction drawEdge(x1, y1, x2, y2, attributes) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newEdge = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newEdge0 = createEdge(attributes);\n        var edgeData = extractAllElementsData(newEdge0);\n        var newEdge = graph0.append('g').data([edgeData]);\n        attributeElement.call(newEdge.node(), edgeData);\n        _updateEdge(newEdge, x1, y1, x2, y2, attributes, options);\n    }\n    this._drawnEdge = {\n        g: newEdge,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        attributes: attributes\n    };\n\n    return this;\n}\n\nfunction updateDrawnEdge(x1, y1, x2, y2) {\n    var attributes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    attributes = Object.assign(this._drawnEdge.attributes, attributes);\n    this._drawnEdge.x1 = x1;\n    this._drawnEdge.y1 = y1;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var edge = graph0.append('g');\n        this._drawnEdge.g = edge;\n    }\n    if (!edge.empty()) {\n        _updateEdge(edge, x1, y1, x2, y2, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var newEdge = createEdge(attributes);\n    var edgeData = extractAllElementsData(newEdge);\n    edge.data([edgeData]);\n    attributeElement.call(edge.node(), edgeData);\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n}\n\nfunction _moveEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var shortening = options.shortening || 0;\n    var arrowHeadLength = 10;\n    var arrowHeadWidth = 7;\n    var margin = 0.174;\n\n    var arrowHeadPoints = [[0, -arrowHeadWidth / 2], [arrowHeadLength, 0], [0, arrowHeadWidth / 2], [0, -arrowHeadWidth / 2]];\n\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var length = Math.sqrt(dx * dx + dy * dy);\n    if (length == 0) {\n        var cosA = 1;\n        var sinA = 0;\n    } else {\n        var cosA = dx / length;\n        var sinA = dy / length;\n    }\n    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;\n\n    if (attributes.URL || attributes.tooltip) {\n        var a = edge.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n        var line = a.selectWithoutDataPropagation(\"path\");\n        var arrowHead = a.selectWithoutDataPropagation(\"polygon\");\n    } else {\n        var line = edge.selectWithoutDataPropagation(\"path\");\n        var arrowHead = edge.selectWithoutDataPropagation(\"polygon\");\n    }\n\n    var path1 = d3Path.path();\n    path1.moveTo(x1, y1);\n    path1.lineTo(x2, y2);\n\n    line.attr(\"d\", path1);\n\n    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);\n    }\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];\n    }\n    var allPoints = [];\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        allPoints.push(point.join(','));\n    }\n    var pointsAttr = allPoints.join(' ');\n\n    arrowHead.attr(\"points\", pointsAttr);\n\n    return this;\n}\n\nfunction moveDrawnEdgeEndPoint(x2, y2) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    var x1 = this._drawnEdge.x1;\n    var y1 = this._drawnEdge.y1;\n    var attributes = this._drawnEdge.attributes;\n\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n\n    return this;\n}\n\nfunction removeDrawnEdge() {\n\n    if (!this._drawnEdge) {\n        return this;\n    }\n\n    var edge = this._drawnEdge.g;\n\n    edge.remove();\n\n    this._drawnEdge = null;\n\n    return this;\n}\n\nfunction insertDrawnEdge(name) {\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n    if (edge.empty()) {\n        return this;\n    }\n    var attributes = this._drawnEdge.attributes;\n\n    var title = edge.selectWithoutDataPropagation(\"title\");\n    title.text(name);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(edgeData);\n\n    insertAllElementsData(edge, edgeData);\n\n    this._drawnEdge = null;\n\n    return this;\n}\n\nfunction drawnEdgeSelection() {\n\n    if (this._drawnEdge) {\n        return this._drawnEdge.g;\n    } else {\n        return d3.select(null);\n    }\n}\n\nfunction createEdge(attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var name = _step.value;\n\n            if (attributes[name] != null) {\n                attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, { format: 'svg' });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n        return doc.documentElement;\n    });\n    var edge = newDoc.select('.edge');\n\n    return edge;\n}\n\nfunction drawNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newNode = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newNode0 = createNode(nodeId, attributes);\n        var nodeData = extractAllElementsData(newNode0);\n        var newNode = graph0.append('g').data([nodeData]);\n        attributeElement.call(newNode.node(), nodeData);\n        _updateNode(newNode, x, y, nodeId, attributes, options);\n    }\n    this._drawnNode = {\n        g: newNode,\n        nodeId: nodeId,\n        x: x,\n        y: y,\n        attributes: attributes\n    };\n\n    return this;\n}\n\nfunction updateDrawnNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n\n    var node = this._drawnNode.g;\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    attributes = Object.assign(this._drawnNode.attributes, attributes);\n    this._drawnNode.nodeId = nodeId;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var node = graph0.append('g');\n        this._drawnNode.g = node;\n    }\n    if (!node.empty()) {\n        _updateNode(node, x, y, nodeId, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateNode(node, x, y, nodeId, attributes, options) {\n\n    var newNode = createNode(nodeId, attributes);\n    var nodeData = extractAllElementsData(newNode);\n    node.data([nodeData]);\n    attributeElement.call(node.node(), nodeData);\n    _moveNode(node, x, y, attributes, options);\n\n    return this;\n}\n\nfunction _moveNode(node, x, y, attributes, options) {\n    if (attributes.URL || attributes.tooltip) {\n        var subParent = node.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n    } else {\n        var subParent = node;\n    }\n    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');\n    var text = node.selectWithoutDataPropagation(\"text\");\n\n    if (svgElements.size() != 0) {\n        var bbox = svgElements.node().getBBox();\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n    } else if (text.size() != 0) {\n        bbox = {\n            x: +text.attr('x'),\n            y: +text.attr('y'),\n            width: 0,\n            height: 0,\n            cx: +text.attr('x'),\n            cy: +text.attr('y')\n        };\n    }\n    svgElements.each(function (data, index) {\n        var svgElement = d3.select(this);\n        if (svgElement.attr(\"cx\")) {\n            svgElement.attr(\"cx\", roundTo4Decimals(x)).attr(\"cy\", roundTo4Decimals(y));\n        } else if (svgElement.attr(\"points\")) {\n            var pointsString = svgElement.attr('points').trim();\n            svgElement.attr(\"points\", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));\n        } else {\n            var d = svgElement.attr('d');\n            svgElement.attr(\"d\", translateDAttribute(d, x - bbox.cx, y - bbox.cy));\n        }\n    });\n\n    if (text.size() != 0) {\n        text.attr(\"x\", roundTo4Decimals(+text.attr(\"x\") + x - bbox.cx)).attr(\"y\", roundTo4Decimals(+text.attr(\"y\") + y - bbox.cy));\n    }\n    return this;\n}\n\nfunction moveDrawnNode(x, y) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n    var node = this._drawnNode.g;\n    var attributes = this._drawnNode.attributes;\n\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n\n    if (!node.empty()) {\n        _moveNode(node, x, y, attributes, options);\n    }\n\n    return this;\n}\n\nfunction removeDrawnNode() {\n\n    if (!this._drawnNode) {\n        return this;\n    }\n\n    var node = this._drawnNode.g;\n\n    if (!node.empty()) {\n        node.remove();\n    }\n\n    this._drawnNode = null;\n\n    return this;\n}\n\nfunction insertDrawnNode(nodeId) {\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    var node = this._drawnNode.g;\n    if (node.empty()) {\n        return this;\n    }\n    var attributes = this._drawnNode.attributes;\n\n    var title = node.selectWithoutDataPropagation(\"title\");\n    title.text(nodeId);\n    if (attributes.URL || attributes.tooltip) {\n        var ga = node.selectWithoutDataPropagation(\"g\");\n        var a = ga.selectWithoutDataPropagation(\"a\");\n        var svgElement = a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = a.selectWithoutDataPropagation('text');\n    } else {\n        var svgElement = node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = node.selectWithoutDataPropagation('text');\n    }\n    text.text(attributes.label || nodeId);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(nodeData);\n\n    insertAllElementsData(node, nodeData);\n\n    this._drawnNode = null;\n\n    return this;\n}\n\nfunction drawnNodeSelection() {\n\n    if (this._drawnNode) {\n        return this._drawnNode.g;\n    } else {\n        return d3.select(null);\n    }\n}\n\nfunction createNode(nodeId, attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var name = _step.value;\n\n            if (attributes[name] != null) {\n                attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var dotSrc = 'graph {\"' + nodeId + '\" [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, { format: 'svg' });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n        return doc.documentElement;\n    });\n    var node = newDoc.select('.node');\n\n    return node;\n}\n\nvar _graphviz$prototype;\n\nfunction Graphviz(selection$$1, options$$1) {\n    this._options = {\n        useWorker: true,\n        engine: 'dot',\n        totalMemory: undefined,\n        keyMode: 'title',\n        fade: true,\n        tweenPaths: true,\n        tweenShapes: true,\n        convertEqualSidedPolygons: true,\n        tweenPrecision: 1,\n        growEnteringEdges: true,\n        zoom: true,\n        zoomScaleExtent: [0.1, 10],\n        zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],\n        width: null,\n        height: null,\n        scale: 1,\n        fit: false\n    };\n    if (options$$1 instanceof Object) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = Object.keys(options$$1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var option = _step.value;\n\n                this._options[option] = options$$1[option];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else if (typeof options$$1 == 'boolean') {\n        this._options.useWorker = options$$1;\n    }\n    var useWorker = this._options.useWorker;\n    if (typeof Worker == 'undefined') {\n        useWorker = false;\n    }\n    if (useWorker) {\n        var scripts = d3.selectAll('script');\n        var vizScript = scripts.filter(function () {\n            return d3.select(this).attr('type') == 'javascript/worker' || d3.select(this).attr('src') && d3.select(this).attr('src').match(/.*\\/viz.js$/);\n        });\n        if (vizScript.size() == 0) {\n            console.warn('No script tag of type \"javascript/worker\" was found and \"useWorker\" is true. Not using web worker.');\n            useWorker = false;\n        } else {\n            this._vizURL = vizScript.attr('src');\n            if (!this._vizURL) {\n                console.warn('No \"src\" attribute of was found on the \"javascript/worker\" script tag and \"useWorker\" is true. Not using web worker.');\n                useWorker = false;\n            }\n        }\n    }\n    if (useWorker) {\n        var js = \"\\n            onmessage = function(event) {\\n                if (event.data.vizURL) {\\n                    importScripts(event.data.vizURL);\\n                }\\n                try {\\n                    var svg = Viz(event.data.dot, event.data.options);\\n                }\\n                catch(error) {\\n                    postMessage({\\n                        type: \\\"error\\\",\\n                        error: error.message,\\n                    });\\n                    return;\\n                }\\n                if (svg) {\\n                    postMessage({\\n                        type: \\\"done\\\",\\n                        svg: svg,\\n                    });\\n                } else {\\n                    postMessage({\\n                        type: \\\"skip\\\",\\n                    });\\n                }\\n            }\\n        \";\n        var blob = new Blob([js]);\n        var blobURL = window.URL.createObjectURL(blob);\n        this._worker = new Worker(blobURL);\n    }\n    this._selection = selection$$1;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set(['title', 'id', 'tag-index', 'index']);\n    this._images = [];\n    this._translation = undefined;\n    this._scale = undefined;\n    this._eventTypes = ['initEnd', 'start', 'layoutStart', 'layoutEnd', 'dataExtractEnd', 'dataProcessPass1End', 'dataProcessPass2End', 'dataProcessEnd', 'renderStart', 'renderEnd', 'transitionStart', 'transitionEnd', 'restoreEnd', 'end'];\n    this._dispatch = d3Dispatch.dispatch.apply(undefined, toConsumableArray(this._eventTypes));\n    initViz.call(this);\n    selection$$1.node().__graphviz__ = this;\n}\n\nfunction graphviz(selector, options$$1) {\n    var g = d3.select(selector).graphviz(options$$1);\n    return g;\n}\n\nGraphviz.prototype = graphviz.prototype = (_graphviz$prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    totalMemory: totalMemory,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom$1,\n    resetZoom: resetZoom,\n    zoomBehavior: zoomBehavior,\n    zoomSelection: zoomSelection,\n    zoomScaleExtent: zoomScaleExtent,\n    zoomTranslateExtent: zoomTranslateExtent,\n    render: render,\n    dot: dot,\n    data: data,\n    renderDot: renderDot,\n    transition: transition$1,\n    active: active$1,\n    options: options,\n    width: width,\n    height: height,\n    scale: scale,\n    fit: fit,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n    drawEdge: drawEdge,\n    updateDrawnEdge: updateDrawnEdge,\n    moveDrawnEdgeEndPoint: moveDrawnEdgeEndPoint,\n    insertDrawnEdge: insertDrawnEdge,\n    removeDrawnEdge: removeDrawnEdge }, defineProperty(_graphviz$prototype, \"removeDrawnEdge\", removeDrawnEdge), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawNode\", drawNode), defineProperty(_graphviz$prototype, \"updateDrawnNode\", updateDrawnNode), defineProperty(_graphviz$prototype, \"moveDrawnNode\", moveDrawnNode), defineProperty(_graphviz$prototype, \"insertDrawnNode\", insertDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), _graphviz$prototype);\n\nvar selection_graphviz = function (options) {\n\n    var g = this.node().__graphviz__;\n    if (g) {\n        g.options(options);\n        g._dispatch.call(\"initEnd\", this);\n    } else {\n        g = new Graphviz(this, options);\n    }\n    return g;\n};\n\nvar selection_selectWithoutDataPropagation = function (name) {\n\n    return d3.select(this.size() > 0 ? this.node().querySelector(name) : null);\n};\n\nd3.selection.prototype.graphviz = selection_graphviz;\nd3.selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n\nexports.graphviz = graphviz;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}